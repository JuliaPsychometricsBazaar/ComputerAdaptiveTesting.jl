var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"#ComputerAdaptiveTesting","page":"Home","title":"ComputerAdaptiveTesting","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ComputerAdaptiveTesting.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.Plots, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"#ComputerAdaptiveTesting.install_extra-Tuple{Any}","page":"Home","title":"ComputerAdaptiveTesting.install_extra","text":"Installs groups of optional dependencies for specific functionality can be 'plots', 'dev' or 'all'.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Aggregators","page":"Home","title":"ComputerAdaptiveTesting.Aggregators","text":"This module takes care of integrating and optimizing over the ability/difficulty space. It includes TrackedResponses, which can store cumulative results during a test.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.Aggregators.EnumerationOptimizer","page":"Home","title":"ComputerAdaptiveTesting.Aggregators.EnumerationOptimizer","text":"Argmax + max over the ability likihood given a set of responses with a given coefficient using exhaustive search.\n\nTODO: Add item bank trait for enumerable item banks.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.Aggregators.RiemannEnumerationIntegrator","page":"Home","title":"ComputerAdaptiveTesting.Aggregators.RiemannEnumerationIntegrator","text":"In case an item bank is enumerable (e.g. GriddedItemBank), then this method integrates over the ability likihood given a set of responses with a given coefficient function using a Riemann sum (aka the rectangle rule).\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.Aggregators.maybe_tracked_ability_estimate-Tuple{ComputerAdaptiveTesting.Aggregators.TrackedResponses, Any}","page":"Home","title":"ComputerAdaptiveTesting.Aggregators.maybe_tracked_ability_estimate","text":"This method returns a tracked point estimate if it is has the given ability estimator, otherwise it computes it using the given ability estimator.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks","text":"This module provides abstract and concrete item banks, which store information about items and their parameters such as difficulty, most typically resulting from fitting an Item-Response Theory (IRT) model. It includes TrackedResponses, which can store cumulative results during a test.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank","text":"This item bank corresponds to the most commonly found version of MIRT in the literature. Its items feature multidimensional discriminations and its learners multidimensional abilities, but item difficulties are single-dimensional.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBank2PL-Tuple{Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBank2PL","text":"Convenience function to construct an item bank of the standard 2-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBank3PL-Tuple{Any, Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBank3PL","text":"Convenience function to construct an item bank of the standard 3-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBank4PL-NTuple{4, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBank4PL","text":"Convenience function to construct an item bank of the standard 4-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBankMirt2PL-Tuple{Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBankMirt2PL","text":"Convenience function to construct an item bank of the standard 2-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBankMirt3PL-Tuple{Any, Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBankMirt3PL","text":"Convenience function to construct an item bank of the standard 3-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBankMirt4PL-NTuple{4, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBankMirt4PL","text":"Convenience function to construct an item bank of the standard 4-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks._search-Union{Tuple{F}, Tuple{ComputerAdaptiveTesting.Integrators.Integrator, F, Any, Any, Any, Any}} where F","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks._search","text":"Binary search for the point x where the integral from -inf...x is target += precis\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.irf-Tuple{ComputerAdaptiveTesting.ItemBanks.BootstrappedItemBank, Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.irf","text":"The item-response function at a particular item and value of Î¸. This is the empirical/nonparametric variant.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Sim.auto_responder-Tuple{Any}","page":"Home","title":"ComputerAdaptiveTesting.Sim.auto_responder","text":"This function constructs a next item function which automatically responds according to responses.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Sim.prompt_response-Tuple{Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.Sim.prompt_response","text":"This response callback simply prompts \n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Sim.run_cat-Tuple{CatLoopConfig, ComputerAdaptiveTesting.ItemBanks.AbstractItemBank}","page":"Home","title":"ComputerAdaptiveTesting.Sim.run_cat","text":"Run a given CatLoopConfig\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Plots","page":"Home","title":"ComputerAdaptiveTesting.Plots","text":"This module contains helpers for creating CAT/IRT related plots. This module requires the optional depedencies AlgebraOfGraphics, DataFrames and Makie to be installed.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.NextItemRules","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules","text":"This module implements the next item selection rules, which form the main part of CAT.\n\nBibliography\n\n[1] Linden, W. J., & Pashley, P. J. (2009). Item selection and ability estimation in adaptive testing. In Elements of adaptive testing (pp. 3-30). Springer, New York, NY.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.NextItemRules.catr_next_item_aliases","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules.catr_next_item_aliases","text":"This mapping provides next item rules through the same names that they are available through in the catR R package. TODO compability with mirtcat\n\n\n\n\n\n","category":"constant"},{"location":"#ComputerAdaptiveTesting.NextItemRules.AbilityVarianceStateCriterion","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules.AbilityVarianceStateCriterion","text":"This StateCriterion returns the variance of the ability estimate given a set of responses.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.NextItemRules.ExpectationBasedItemCriterion","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules.ExpectationBasedItemCriterion","text":"This ItemCriterion wraps a StateCriterion and looks at its expected value for a particular item 1-ply ahead.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.Integrators","page":"Home","title":"ComputerAdaptiveTesting.Integrators","text":"This module provides a common interface to different integration techniques.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.IntegralCoeffs","page":"Home","title":"ComputerAdaptiveTesting.IntegralCoeffs","text":"These are helpers for weighting integrals of p.d.f.s for calculating basic stats.\n\nThe main idea of doing it this way is to have a single instance of these to reuse specializations and to use structs so as to be able to control the level of specialization.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.CatConfig.CatLoopConfig","page":"Home","title":"ComputerAdaptiveTesting.CatConfig.CatLoopConfig","text":"Configuration for a simulatable CAT.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.CatConfig.CatRules","page":"Home","title":"ComputerAdaptiveTesting.CatConfig.CatRules","text":"Configuration of the rules for a CAT. This all includes all the basic rules for the CAT's operation, but not the item bank, nor any of the interactivity hooks needed to actually run the CAT.\n\nThis may be more a more convenient layer to integrate than CatLoopConfig if you want to write your own CAT loop rather than using hooks.\n\n\n\n\n\n","category":"type"}]
}
