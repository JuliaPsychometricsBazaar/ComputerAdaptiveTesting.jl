var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [CATPlots]","category":"page"},{"location":"examples/examples/irfs/#Item-Response-Functions","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"section"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Item Response Functions","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"using Makie\nimport Pkg\nusing Distributions: Normal, cdf\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"xs = -8:0.05:8\nlines(xs, cdf.(Normal(), xs))\nlines!(xs, cdf.(NormalScaledLogistic(), xs))\ncurrent_figure()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"<div data-jscall-id=\"23\"><script data-jscall-id=\"24\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('d0e6562b-542e-42ae-ae89-68901a45ed64');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"d0e6562b-542e-42ae-ae89-68901a45ed64\" data-jscall-id=\"22\" src=\"http://127.0.0.1:9284/d0e6562b-542e-42ae-ae89-68901a45ed64\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/examples/perf_plots/#Perf-plots","page":"Perf plots","title":"Perf plots","text":"","category":"section"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"Plots for performance of different integrators for ability estimators","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"using Makie\nimport Pkg\nusing CSV\nusing DataFrames\nusing CategoricalArrays: levels\nusing IterTools: chain\nusing ComputerAdaptiveTesting\nusing CATPlots\nusing CATPlots: LabelledToggleGrid, MenuGrid\n\nDOCS_DATA = pkgdir(ComputerAdaptiveTesting) * \"/docs/data/\"\n\n@automakie()\n\ndf = CSV.read(\n\t(DOCS_DATA * \"integrator_benchmark_results.csv\"),\n\tDataFrame;\n\ttypes=Dict(\n\t\t\"value\" => Float64,\n\t\t\"err\" => Float64,\n\t\t\"bytes\" => Int64,\n\t\t\"response\" => Int32,\n\t\t\"item_bank\" => Int32,\n\t\t\"dim\" => Int32,\n\t\t\"trial\" => Int32,\n\t\t\"time\" => Float64,\n\t\t\"gctime\" => Float64,\n\t\t\"rtol\" => Float64,\n\t)\n)\n\nfunction plot(df)\n\tfig = Figure()\n\tax = Axis(fig[1, 1])\n\n\tgroupables = [\"item_bank\", \"response\", \"trial\", \"dim\", \"integrator\"]\n\tregressables = [\"integrator\", \"dim\", \"rtol\", \"value\", \"err\", \"bytes\", \"gctime\"]\n\n\tMenu(fig, options = [\"none\", groupables...], default = \"none\")\n\ttoggles = []\n\tsliders = []\n\tslider_idxs = []\n\tmenus = []\n\tmenu_idxs = []\n\tfor (idx, groupable) in enumerate(groupables)\n\t\tpush!(toggles, (\n\t\t\tlabel = groupable,\n\t\t))\n\t\topts = sort(levels(df[!, groupable]))\n\t\tif eltype(opts) <: AbstractString\n\t\t\tpush!(slider_idxs, idx)\n\t\t\tpush!(menus, (\n\t\t\t\tlabel = groupable,\n\t\t\t\toptions = opts\n\t\t\t))\n\t\telse\n\t\t\tpush!(menu_idxs, idx)\n\t\t\tpush!(sliders, (\n\t\t\t\tlabel = groupable,\n\t\t\t\trange = opts\n\t\t\t))\n\t\tend\n\tend\n\ttgrid = LabelledToggleGrid(\n\t\tfig,\n\t\ttoggles...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tlsgrid = SliderGrid(\n\t\tfig,\n\t\tsliders...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tmgrid = MenuGrid(\n\t\tfig,\n\t\tmenus...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\n\tworking_df = Observable(nothing)\n\tfunction update_working_df(_)\n\t\tdf_prime = df\n\t\tslider_menu_vals = Vector{Any}(undef, length(sliders) + length(menus))\n\t\tslider_menu_vals[slider_idxs] = [slider.value for slider in lsgrid.sliders]\n\t\tslider_menu_vals[menu_idxs] = [menu.selection for menu in mgrid.menus]\n\t\tfor (groupable, toggle, value) in zip(groupables, tgrid.toggles, slider_menu_vals)\n\t\t\tif !toggle.value\n\t\t\t\tcontinue\n\t\t\tend\n\t\t\tdf_prime = filter(working_df, groupable => value)\n\t\tend\n\t\tworking_df[] = df_prime\n\tend\n\n\tfor observable in chain(\n\t\t(t.active for t in tgrid.toggles),\n\t\t(s.value for s in lsgrid.sliders),\n\t\t(m.selection for m in mgrid.menus)\n\t)\n\t\ton(update_working_df, observable)\n\tend\n\n\tx_var_menu = Menu(fig, options = regressables)\n\ty_var_menu = Menu(fig, options = regressables)\n\tcoded_menu = Menu(fig, options = regressables)\n\n\txs = @lift($working_df !== nothing && $(x_var_menu.selection) !== nothing ? $working_df[$(x_var_menu.selection)] : nothing)\n\tys = @lift($working_df !== nothing && $(y_var_menu.selection) !== nothing ? $working_df[$(y_var_menu.selection)] : nothing)\n\n\tscatter = @lift(\n\t\t$xs !== nothing && $ys !== nothing && $(coded_menu.selection) !== nothing ?\n\t\t\tlines!(\n\t\t\t\tax,\n\t\t\t\t$xs,\n\t\t\t\t$ys;\n\t\t\t\tcolor=$(coded_menu.selection)\n\t\t\t) : nothing\n\t)\n\n\tfig\nend\n\nplot(df)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"<div data-jscall-id=\"29\"><script data-jscall-id=\"30\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('c19dea00-91fe-4c5c-affd-14e9d41e5773');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"c19dea00-91fe-4c5c-affd-14e9d41e5773\" data-jscall-id=\"28\" src=\"http://127.0.0.1:9284/c19dea00-91fe-4c5c-affd-14e9d41e5773\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcome. Please discuss any larger changes in the issues before making a pull request to avoid wasted work.","category":"page"},{"location":"contributing/#Running-tests","page":"Contributing","title":"Running tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can run tests locally like so:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=test test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Unfortunately, Pkg.test() does not work properly at the moment. See this issue.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#ability_convergence_3pl","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-3PL-IRT-model","page":"How abilities converge on simulated 3PL data","title":"Running a CAT based on a synthetic correct/incorrect 3PL IRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: AbilityVarianceStateCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Responses: BooleanResponse\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using ComputerAdaptiveTesting.DummyData: dummy_full, std_normal, SimpleItemBankSpec, StdModel3PL\nusing ComputerAdaptiveTesting.MathTraits\n(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel3PL(), OneDimContinuousDomain(), BooleanResponse());\n    num_questions=100,\n    num_testees=3\n)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}}([0.38889958631395416, 0.2540679486228809, 0.0, 0.0, 0.11480432230590623, 0.0006490400164104698, 0.21475510309598086, 0.1576968707363209, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11835907975628918, 0.13625338690946576, 0.11586305624757409, 0.0, 0.030755590006618524, 0.0, 0.0, 0.0, 0.1337930157638301, 0.0, 0.0, 0.02457222782764552, 0.0, 0.25574179510235534, 0.06478290158826647, 0.20859132814994874, 0.0, 0.12861656933260737, 0.0, 0.005400218063591763, 0.0762048069499133, 0.01489659264188424, 0.026975642892838988, 0.08075178974166916, 0.0, 0.0, 0.0, 0.43553186336640587, 0.14201233248266038, 0.0, 0.22482273025062646, 0.355130288328545, 0.019111632659135312, 0.04930981013984628, 0.0, 0.0, 0.047545323472551165, 0.025795618990643334, 0.07487029397570376, 0.03712514671064986, 0.0, 0.0, 0.1541389698908955, 0.30067865757880363, 0.0, 0.1444713920420266, 0.04049382738553779, 0.0, 0.07515964965377228, 0.18234268981107088, 0.2179891650990089, 0.045559309295615455, 0.12923351179028575, 0.11515060563144906, 0.0, 0.08607501959337968, 0.21207577871025537, 0.1735467267490511, 0.0, 0.0, 0.24538817809216404, 0.1748182225543912, 0.27147837580135065, 0.05482542361918167, 0.0, 0.0, 0.06387478796350092, 0.0, 0.0, 0.18133487659333689, 0.1520293324070389, 0.0, 0.0, 0.0, 0.048432896136677485, 0.0, 0.0, 0.10048797453357067, 0.011369327516672493, 0.0, 0.27200451312437435, 0.22083604822019046, 0.2894958534479317, 0.0, 0.0, 0.008454992696218414], ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-0.9995752733020467, 0.32855377496897015, -0.09459300281654381, 0.04445087579962129, 0.2657592785363842, 0.6310844217019782, 0.38537290741190344, -0.011539949183398287, -0.09110373428063495, 0.294931237833987, -1.2604962372592523, -0.22423261551162618, 0.5517049485620976, -1.043191330428274, 0.641806321840568, 1.1473145680939398, -1.3103023335282378, -0.5005017040900399, -0.8305430300014318, 0.8311627797075616, 1.2387114157814514, 0.41577885684090976, -0.3937766954092368, -0.9460608132590167, 0.15066213688929656, 1.3110535930918321, 1.726492177581084, 0.21500244441384986, 1.3319090951432195, 0.9211267350137899, 0.5739366519047254, 2.016102197948779, -0.46595161331686713, -0.6275195820470759, 1.9458121777833954, 0.3904439869963624, 0.0026009377655328678, -0.03921647483357481, -1.917467934838411, -0.037140520984775195, 0.5358524883932744, 0.7849521986456328, -0.31901597074368443, 2.501837977999649, -1.6308636565844539, -0.12598921535027627, 0.7682730238522408, 1.0676476280479776, 1.0914791824803078, 0.050350670739581625, 1.0033248108898398, 1.1672874868341032, -0.2448691420665449, 0.575113698988805, -0.06370674511550758, -0.8496271966521557, 0.7977198330391198, -0.8469143724686363, 0.1320402017321988, -1.2404065379677456, 1.3843167965710814, -0.5641888625760311, -1.003986627619358, -0.29535275138184414, -1.6240258656850586, 2.6324969807034244, -0.37137519388445295, -0.30251554888501436, 1.3287180330069812, 1.124528714354705, -0.8000843844281029, -1.3358635750725478, -0.835874826995256, 0.4199799268753184, 0.05263393137036597, -0.47573003098153105, 1.5394722218482155, 0.37528710914998203, 0.4488500843127487, -1.4391276651832512, -1.8843815426737076, 1.3320469296112436, -0.4319592511822684, 1.0272882869478654, 0.2858861239911492, 1.3273248077181798, -2.4672879530758443, -0.7032933576126631, 0.6695199005211366, 1.7111789239946895, -0.1780472563255952, -0.22888673839892387, -0.6448628292984521, -0.8282759153491985, -0.3440791637800445, -0.34620644094143516, 1.473424196116717, 0.26953311255501905, 0.3635462316428582, 0.5911764451248468], [0.8777508325310845, 0.6826974929616083, 1.026701535595208, 1.0076747057021604, 1.0839903905670836, 1.1095378612472426, 1.0001270515686675, 0.8530925741384878, 1.1046837430233976, 0.7308770781614602, 0.6876278285544635, 1.0541153404378734, 0.8393337426756294, 0.894812622667604, 1.1210366547519903, 1.0907860021383164, 0.8064634958580442, 0.8860187881099227, 1.2935238908059101, 1.020428723783112, 1.1048383395232744, 0.9193915891594079, 1.0352757772539354, 0.5968597388157584, 0.9242152038390448, 0.7473783934025009, 1.0441632451784406, 1.092890730554399, 0.9502247727697195, 0.7406375540444063, 1.1121047881309603, 0.9523769568008935, 1.007816359231914, 1.1325555604598048, 0.9069346537613245, 0.9043506414311276, 1.1660863299756188, 0.8506360069932939, 0.8028606840748671, 0.8727260535163326, 1.0060232599407197, 0.8468142209812708, 0.9823829883756102, 1.0139214920900055, 1.12755316308815, 0.920628228690108, 1.0725900282563525, 0.8399148528681278, 0.5819795500326468, 1.1148210611894267, 1.19418335436403, 1.0686555507211972, 0.9228027280928481, 1.14964497273255, 0.9953461717383674, 0.9526601923887539, 1.4256050988190128, 1.01484599435612, 0.9581574235112575, 1.1228826972984067, 0.9246613078986071, 1.0762419724937096, 1.1817786889944644, 0.7871646222902144, 0.9268262793272892, 0.832677695079257, 1.23320599680548, 0.8004868909272496, 1.2201522885747156, 0.9794274838730306, 1.0250056586869578, 0.8915763405110175, 1.1109148039742383, 1.008409128724938, 0.9754055175135942, 1.2010812414556336, 1.065215071106833, 0.7225394233848108, 0.979971212278916, 0.9045688673730987, 1.201705741039647, 0.9639998643217588, 1.0646424854989534, 0.8463903434102524, 0.9614267966495159, 1.1168060285863812, 1.093263586056313, 0.9751079273850354, 1.0897103084922362, 1.1997944979054727, 0.6750980185786355, 1.2285329535404068, 1.0102595512376205, 1.2665569479059453, 1.2535075025301154, 1.1123902535808763, 0.8262114600640549, 1.1573351084127073, 0.6783816788944279, 1.2716970609876657], nothing)), [\"Repellat placeat deleniti deserunt distinctio ratione enim.\", \"Nostrum.\", \"Numquam aut maxime.\", \"Voluptatibus odit perspiciatis nisi nihil quis ad deserunt accusamus vitae tenetur labore.\", \"Aliquid alias ut sunt earum est.\", \"Rerum et repellendus numquam cumque recusandae eius ut laborum porro pariatur.\", \"Eius.\", \"Ex nesciunt mollitia qui et non aut hic nihil recusandae quidem.\", \"Qui.\", \"Quos possimus.\", \"Exercitationem labore aliquam nisi voluptatem unde architecto voluptate voluptatem possimus voluptatem.\", \"Labore dolore ut quia.\", \"Dolor et ut eum odit amet deserunt.\", \"Rerum architecto voluptas minus eligendi molestias modi recusandae.\", \"Temporibus non enim sit est quas recusandae in quasi tenetur.\", \"Voluptatem consectetur.\", \"Atque.\", \"Officia.\", \"Fugit laboriosam et ut qui numquam labore placeat non nihil mollitia et.\", \"Sed inventore rerum ad et libero.\", \"Sed asperiores.\", \"Explicabo deleniti eaque.\", \"Magnam odit nihil quia ea.\", \"Iste quaerat qui aperiam quisquam laborum sit adipisci distinctio.\", \"Quia rem et cum temporibus alias quis in modi.\", \"Dolor commodi maxime non voluptate quas delectus autem nobis odio.\", \"Quibusdam harum accusamus cumque aspernatur quod quia est.\", \"Sint neque nostrum placeat et amet tenetur quo.\", \"Iste qui ipsam illum animi distinctio nulla quae ut.\", \"Et.\", \"Ex cupiditate natus dignissimos molestiae sapiente vel praesentium temporibus alias sunt.\", \"Voluptatibus.\", \"Eveniet odit beatae adipisci illum non vitae sequi.\", \"Quidem magni perspiciatis magnam iste tempore.\", \"Ex accusantium eos in nostrum asperiores qui exercitationem placeat ab facere.\", \"At consequatur quae.\", \"Commodi unde dolores ipsa soluta est est debitis itaque.\", \"Fuga veritatis.\", \"Quia sit quasi ea ipsa dolor minus rem.\", \"Officia et explicabo.\", \"Eum deserunt a libero doloremque tempora est sit.\", \"Explicabo quia nihil ipsum sequi adipisci mollitia quia consequatur sunt quia ut.\", \"Consequatur tempora expedita iste ullam ipsam voluptas sit.\", \"Cum non dolorem tenetur explicabo vitae aut saepe et omnis voluptas rerum.\", \"Rem.\", \"A laboriosam et atque saepe quis quia voluptas asperiores est officiis laudantium.\", \"Modi quia commodi laudantium sint odio voluptas accusamus voluptatum tempore enim nulla.\", \"Cumque vel qui aperiam sed.\", \"Nulla consequatur quo quibusdam voluptate ut odit.\", \"Omnis assumenda quis et quia numquam possimus et sed quia.\", \"Id quia expedita et repudiandae omnis voluptatem harum quidem nostrum dolorem repellendus.\", \"Ex delectus excepturi nostrum voluptatem sapiente quas voluptatem voluptatem et labore consectetur.\", \"Veritatis repudiandae architecto non et.\", \"Deserunt iste est cum vero iusto.\", \"Enim porro exercitationem sequi impedit fugiat aut autem suscipit suscipit mollitia eos.\", \"Voluptatum commodi fuga earum odit.\", \"Placeat facilis sed nemo expedita.\", \"Ab rerum est enim.\", \"Sed suscipit atque quaerat quidem eveniet eum aliquam.\", \"Quasi.\", \"Quo laudantium dolores incidunt et.\", \"Autem voluptatum explicabo quas qui quo.\", \"Necessitatibus sed.\", \"Id animi provident aliquam autem.\", \"Quia reiciendis quis itaque deserunt laboriosam non.\", \"Quia omnis exercitationem.\", \"Ea quae accusamus voluptatum eos.\", \"Incidunt adipisci error nesciunt.\", \"Facilis sunt eligendi voluptatum sit aliquam aliquid non placeat eligendi qui.\", \"Nemo similique.\", \"Velit temporibus id qui est in occaecati quia mollitia eaque.\", \"Nobis repellat beatae asperiores ea quaerat et cumque.\", \"Consectetur voluptas accusamus est cumque et consequatur.\", \"Quos non ipsam aspernatur quia nostrum omnis autem quam laboriosam a aut.\", \"Repellendus sint.\", \"Esse ipsam et.\", \"Quaerat et velit omnis animi enim autem quo numquam natus ullam.\", \"Corporis velit voluptates et amet.\", \"Aut necessitatibus consectetur dolor occaecati enim incidunt dolorem impedit voluptatem repellendus dolores.\", \"Aliquid unde voluptatibus adipisci quasi itaque qui sed quisquam.\", \"Et nisi cum commodi.\", \"Ea autem ab excepturi alias qui.\", \"Aut dolores voluptas dolorem sint velit.\", \"Provident dignissimos amet dolores illo doloremque sunt saepe facere enim est.\", \"Voluptates sunt qui suscipit.\", \"Aspernatur ut eligendi quae eligendi qui repudiandae ea.\", \"Inventore ut inventore accusamus quibusdam sunt quo et explicabo culpa.\", \"Quis delectus quidem et magnam ut omnis magni.\", \"Et molestiae inventore sequi et expedita eos minus in.\", \"Qui et quam commodi magni necessitatibus saepe dolorem.\", \"Placeat delectus libero sunt et nemo est.\", \"Fugit aliquid dolores nihil.\", \"Ex et atque est corporis.\", \"Veritatis molestiae ipsum est asperiores sunt laudantium iure molestiae.\", \"Facilis illum rerum laudantium sunt quos laboriosam temporibus asperiores voluptas animi quos.\", \"Quidem in.\", \"Eum consequuntur qui cum alias ipsa ullam deserunt ex dolores.\", \"Deleniti quos doloribus magni nobis voluptatum dolores et repellat nisi.\", \"Autem eligendi laboriosam dolorum harum optio provident non unde recusandae.\", \"Nulla repellendus quia dolores vero doloremque qui.\"], [1.6046328146834696, -1.3436091850379628, -0.4402381366341836], Bool[1 1 1; 1 1 0; 1 0 1; 1 0 1; 1 0 0; 0 0 0; 1 0 0; 1 0 1; 1 1 1; 1 0 0; 1 0 1; 1 0 1; 0 0 0; 1 0 1; 1 1 1; 1 1 0; 1 1 0; 1 0 0; 1 0 1; 1 0 0; 0 0 0; 1 0 0; 1 0 1; 1 1 1; 1 0 0; 0 0 0; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 1 1 1; 1 1 0; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 1 1 1; 1 0 0; 1 0 1; 1 1 1; 1 1 0; 0 0 0; 1 1 1; 1 1 1; 1 0 0; 0 0 0; 1 0 0; 1 0 0; 0 0 0; 0 0 0; 1 0 1; 1 0 1; 1 0 0; 1 0 1; 1 0 0; 1 0 1; 1 0 0; 1 1 1; 1 0 0; 1 0 1; 1 0 1; 1 0 1; 1 1 1; 0 0 0; 1 0 0; 1 0 1; 0 0 0; 1 0 0; 1 0 1; 1 1 1; 1 0 1; 1 0 0; 1 0 1; 1 0 1; 1 0 0; 1 0 1; 1 0 0; 1 0 1; 1 1 1; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 0 0 0; 1 1 1; 1 0 1; 1 0 0; 1 0 0; 1 0 1; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 1 0 1; 1 0 0; 1 0 0; 1 1 0; 1 0 0])","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"max_questions = 99\nintegrator = FixedGKIntegrator(-6, 6, 80)\ndist_ability_est = PriorAbilityEstimator(std_normal)\nability_estimator = MeanAbilityEstimator(dist_ability_est, integrator)\nrules = CatRules(\n    ability_estimator,\n    AbilityVarianceStateCriterion(dist_ability_est, integrator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\npoints = 500\nxs = range(-2.5, 2.5, length=points)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = abs(θ - true_θ)\nend","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"8\"><script data-jscall-id=\"9\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('ed4b5ff3-15ef-487b-a648-5cb3297ce9ac');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"ed4b5ff3-15ef-487b-a648-5cb3297ce9ac\" data-jscall-id=\"7\" src=\"http://127.0.0.1:9284/ed4b5ff3-15ef-487b-a648-5cb3297ce9ac\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_dist_fig = lh_evolution_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"11\"><script data-jscall-id=\"12\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('2f6893c6-1c92-4195-9410-14492c601024');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"2f6893c6-1c92-4195-9410-14492c601024\" data-jscall-id=\"10\" src=\"http://127.0.0.1:9284/2f6893c6-1c92-4195-9410-14492c601024\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can browse through the examples below. Each example has code and outputs, as well as links to download a script to run locally or to view as a Jupyter notebook on NBViewer. Some of the examples have interactive plots, and these will not currently work unless the scripts are run locally. TODO: Add binder links to examples.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you would like to run the examples as Jupyter notebooks locally to see interactive plots inline with the code, you can clone the repository and run docs/build_nbs.jl like so:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"$ git clone https://github.com/frankier/ComputerAdaptiveTesting.jl.git\n$ cd ComputerAdaptiveTesting\n$ julia --project=. docs/build_nbs.jl","category":"page"},{"location":"examples/#Examples-2","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Item Response Functions","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#ability_convergence_mirt","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-MIRT-model","page":"How abilities converge on simulated MIRT data","title":"Running a CAT based on a synthetic correct/incorrect MIRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: DRuleItemCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"dims = 2\nusing ComputerAdaptiveTesting.DummyData: dummy_full, std_mv_normal, SimpleItemBankSpec, StdModel4PL\nusing ComputerAdaptiveTesting.MathTraits\nusing ComputerAdaptiveTesting.Responses: BooleanResponse","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"TODO: pass in dims","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel4PL(), VectorContinuousDomain(), BooleanResponse()),\n    dims;\n    num_questions=10,\n    num_testees=2\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(ComputerAdaptiveTesting.ItemBanks.SlipItemBank{ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}}([0.0, 0.12247433817091086, 0.17483693414132662, 0.0, 0.0, 0.1970566665655159, 0.04936672913602599, 0.352470564775878, 0.22704874181609222, 0.03644377594207262], ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}([0.0, 0.0, 0.0, 0.0, 0.12857395364932953, 0.0, 0.0, 0.0, 0.14134925351428937, 0.0], ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [0.9035233366529595, 0.2436070317156982, -1.910643140401632, -0.3596409822784814, -0.3265082947370934, 0.7540514030138251, 0.5806889089316911, 1.4641784461027423, 0.35805683399582355, -0.2531791628216399], [0.5831405378137217 0.7446293407118116 1.1316477128519613 0.850506755974464 1.0245086564929107 0.418618430396692 1.187014020453556 1.1509798099262878 0.8039827032173553 1.2648436457192536; 1.0429238192463872 0.918753088519071 1.2282406888075017 1.0487988226924627 1.0607801855158765 1.061222959178952 1.3100552202949016 1.033421256773223 0.801730053545019 0.7725450491823669], nothing))), [\"Eligendi eum voluptate.\", \"Aut.\", \"Est.\", \"Quas et consequatur minus rerum laborum molestiae accusantium.\", \"Dolore aspernatur et.\", \"Est error qui officiis aut dolorem et qui aspernatur.\", \"Recusandae voluptatem et.\", \"Totam delectus deleniti iure et quod reprehenderit repellendus nihil praesentium consequuntur.\", \"Et velit et sit perspiciatis.\", \"Eos fugit vitae aliquam et perspiciatis atque incidunt.\"], [-1.1777237881993536 -0.4113352042166237; 0.06780662002832757 1.5398540235533584], Bool[0 1; 0 0; 0 1; 1 1; 1 1; 0 1; 0 1; 0 0; 0 1; 0 1])","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"max_questions = 9\nintegrator = CubaIntegrator([-6.0, -6.0], [6.0, 6.0], CubaVegas(); rtol=1e-2)\nability_estimator = MeanAbilityEstimator(PriorAbilityEstimator(std_mv_normal(dims)), integrator)\nrules = CatRules(\n    ability_estimator,\n    DRuleItemCriterion(ability_estimator),\n    FixedItemsTerminationCondition(max_questions)\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"CatRules\n  next_item: ComputerAdaptiveTesting.NextItemRules.ItemStrategyNextItemRule{ComputerAdaptiveTesting.NextItemRules.ExhaustiveSearch1Ply, ComputerAdaptiveTesting.NextItemRules.DRuleItemCriterion{ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}}}\n  termination_condition: ComputerAdaptiveTesting.TerminationConditions.FixedItemsTerminationCondition\n  ability_estimator: ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}\n  ability_tracker: ComputerAdaptiveTesting.Aggregators.NullAbilityTracker ComputerAdaptiveTesting.Aggregators.NullAbilityTracker()\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"XXX: We shouldn't need to specify xs here since the distributions are not used – rework","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"points = 3\nxs = repeat(range(-2.5, 2.5, length=points)', dims, 1)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator, abilities)\nfor testee_idx in axes(responses, 2)\n    @debug \"Running for testee\" testee_idx\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[:, testee_idx]\n    abs_err = sum(abs.(θ .- true_θ))\n    @info \"convergence\" true_θ θ abs_err\nend","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     -1.1777237881993536\n│      0.06780662002832757\n│   θ =\n│    2-element Vector{Float64}:\n│     -0.40393785236705687\n│     -0.10671441820461956\n└   abs_err = 0.9483069740652439\n┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     -0.4113352042166237\n│      1.5398540235533584\n│   θ =\n│    2-element Vector{Float64}:\n│     0.7203048355581704\n│     1.3108282887132887\n└   abs_err = 1.3606657746148638\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make a plot showing how the estimated value converges during the CAT.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_lines_fig = ability_convergence_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"<div data-jscall-id=\"17\"><script data-jscall-id=\"18\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('c3a165fa-a00f-4151-94a8-62adcd7dcaf5');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"c3a165fa-a00f-4151-94a8-62adcd7dcaf5\" data-jscall-id=\"16\" src=\"http://127.0.0.1:9284/c3a165fa-a00f-4151-94a8-62adcd7dcaf5\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"","page":"Getting started","title":"Getting started","text":"This is the documentation for ComputerAdaptiveTesting. For information about the purpose of the package and its installation, please see the README.md.","category":"page"},{"location":"","page":"Getting started","title":"Getting started","text":"The documentation is currently mainly limited to Examples and an API reference. The currently recommended way to get started is by hacking an existing example.","category":"page"},{"location":"examples/examples/vocab_iq/#vocab_iq","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"section"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"First a 1-dimensional IRT model is fitted based on open response data to the vocabulary IQ test using the IRTSupport package which internally, this uses the mirt R package. Next, the model is used to administer the test interactively.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"using Base.Filesystem\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.DummyData: std_normal\nusing ComputerAdaptiveTesting.ExtraDistributions\nusing ComputerAdaptiveTesting.Sim\nusing ComputerAdaptiveTesting.NextItemRules\nusing ComputerAdaptiveTesting.TerminationConditions\nusing ComputerAdaptiveTesting.Aggregators\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Optimizers\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing IRTSupport.Datasets.VocabIQ\n\nfunction run_vocab_iq_cat()\n    item_bank = get_item_bank_cached()\n    integrator = FixedGKIntegrator(-6, 6, 61)\n    ability_integrator = AbilityIntegrator(integrator)\n    dist_ability_est = PriorAbilityEstimator(std_normal)\n    optimizer = AbilityOptimizer(OneDimOptimOptimizer(-6.0, 6.0, NelderMead()))\n    ability_estimator = ModeAbilityEstimator(dist_ability_est, optimizer)\n    @info \"run_cat\" ability_estimator\n    rules = CatRules(\n        ability_estimator,\n        AbilityVarianceStateCriterion(dist_ability_est, ability_integrator),\n        FixedItemsTerminationCondition(45)\n    )\n    function get_response(response_idx, response_name)\n        params = item_params(item_bank, response_idx)\n        println(\"Parameters for next question: $params\")\n        VocabIQ.prompt_response(response_idx)\n    end\n    function new_response_callback(tracked_responses, terminating)\n        if tracked_responses.responses.values[end] > 0\n            println(\"Correct\")\n        else\n            println(\"Wrong\")\n        end\n        ability = ability_estimator(tracked_responses)\n        var = variance_given_mean(ability_integrator, dist_ability_est, tracked_responses, ability)\n        println(\"Got ability estimate: $ability ± $var\")\n        println(\"\")\n    end\n    loop_config = CatLoopConfig(\n        rules=rules,\n        get_response=get_response,\n        new_response_callback=new_response_callback\n    )\n    run_cat(loop_config, item_bank)\nend\n\nrun_vocab_iq_cat()","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"}]
}
