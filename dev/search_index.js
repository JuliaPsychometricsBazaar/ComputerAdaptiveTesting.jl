var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [CATPlots]","category":"page"},{"location":"examples/examples/irfs/#Item-Response-Functions","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"section"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Item Response Functions","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"using Makie\nimport Pkg\nusing Distributions: Normal, cdf\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"xs = -8:0.05:8\nlines(xs, cdf.(Normal(), xs))\nlines!(xs, cdf.(NormalScaledLogistic(), xs))\ncurrent_figure()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"<div data-jscall-id=\"23\"><script data-jscall-id=\"24\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('5fb70fb9-2260-41f5-93a1-e0ab9be5e11a');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"5fb70fb9-2260-41f5-93a1-e0ab9be5e11a\" data-jscall-id=\"22\" src=\"http://127.0.0.1:9284/5fb70fb9-2260-41f5-93a1-e0ab9be5e11a\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/examples/perf_plots/#Perf-plots","page":"Perf plots","title":"Perf plots","text":"","category":"section"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"Plots for performance of different integrators for ability estimators","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"using Makie\nimport Pkg\nusing CSV\nusing DataFrames\nusing CategoricalArrays: levels\nusing IterTools: chain\nusing ComputerAdaptiveTesting\nusing CATPlots\nusing CATPlots: LabelledToggleGrid, MenuGrid\n\nDOCS_DATA = pkgdir(ComputerAdaptiveTesting) * \"/docs/data/\"\n\n@automakie()\n\ndf = CSV.read(\n\t(DOCS_DATA * \"integrator_benchmark_results.csv\"),\n\tDataFrame;\n\ttypes=Dict(\n\t\t\"value\" => Float64,\n\t\t\"err\" => Float64,\n\t\t\"bytes\" => Int64,\n\t\t\"response\" => Int32,\n\t\t\"item_bank\" => Int32,\n\t\t\"dim\" => Int32,\n\t\t\"trial\" => Int32,\n\t\t\"time\" => Float64,\n\t\t\"gctime\" => Float64,\n\t\t\"rtol\" => Float64,\n\t)\n)\n\nfunction plot(df)\n\tfig = Figure()\n\tax = Axis(fig[1, 1])\n\n\tgroupables = [\"item_bank\", \"response\", \"trial\", \"dim\", \"integrator\"]\n\tregressables = [\"integrator\", \"dim\", \"rtol\", \"value\", \"err\", \"bytes\", \"gctime\"]\n\n\tMenu(fig, options = [\"none\", groupables...], default = \"none\")\n\ttoggles = []\n\tsliders = []\n\tslider_idxs = []\n\tmenus = []\n\tmenu_idxs = []\n\tfor (idx, groupable) in enumerate(groupables)\n\t\tpush!(toggles, (\n\t\t\tlabel = groupable,\n\t\t))\n\t\topts = sort(levels(df[!, groupable]))\n\t\tif eltype(opts) <: AbstractString\n\t\t\tpush!(slider_idxs, idx)\n\t\t\tpush!(menus, (\n\t\t\t\tlabel = groupable,\n\t\t\t\toptions = opts\n\t\t\t))\n\t\telse\n\t\t\tpush!(menu_idxs, idx)\n\t\t\tpush!(sliders, (\n\t\t\t\tlabel = groupable,\n\t\t\t\trange = opts\n\t\t\t))\n\t\tend\n\tend\n\ttgrid = LabelledToggleGrid(\n\t\tfig,\n\t\ttoggles...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tlsgrid = SliderGrid(\n\t\tfig,\n\t\tsliders...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tmgrid = MenuGrid(\n\t\tfig,\n\t\tmenus...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\n\tworking_df = Observable(nothing)\n\tfunction update_working_df(_)\n\t\tdf_prime = df\n\t\tslider_menu_vals = Vector{Any}(undef, length(sliders) + length(menus))\n\t\tslider_menu_vals[slider_idxs] = [slider.value for slider in lsgrid.sliders]\n\t\tslider_menu_vals[menu_idxs] = [menu.selection for menu in mgrid.menus]\n\t\tfor (groupable, toggle, value) in zip(groupables, tgrid.toggles, slider_menu_vals)\n\t\t\tif !toggle.value\n\t\t\t\tcontinue\n\t\t\tend\n\t\t\tdf_prime = filter(working_df, groupable => value)\n\t\tend\n\t\tworking_df[] = df_prime\n\tend\n\n\tfor observable in chain(\n\t\t(t.active for t in tgrid.toggles),\n\t\t(s.value for s in lsgrid.sliders),\n\t\t(m.selection for m in mgrid.menus)\n\t)\n\t\ton(update_working_df, observable)\n\tend\n\n\tx_var_menu = Menu(fig, options = regressables)\n\ty_var_menu = Menu(fig, options = regressables)\n\tcoded_menu = Menu(fig, options = regressables)\n\n\txs = @lift($working_df !== nothing && $(x_var_menu.selection) !== nothing ? $working_df[$(x_var_menu.selection)] : nothing)\n\tys = @lift($working_df !== nothing && $(y_var_menu.selection) !== nothing ? $working_df[$(y_var_menu.selection)] : nothing)\n\n\tscatter = @lift(\n\t\t$xs !== nothing && $ys !== nothing && $(coded_menu.selection) !== nothing ?\n\t\t\tlines!(\n\t\t\t\tax,\n\t\t\t\t$xs,\n\t\t\t\t$ys;\n\t\t\t\tcolor=$(coded_menu.selection)\n\t\t\t) : nothing\n\t)\n\n\tfig\nend\n\nplot(df)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"<div data-jscall-id=\"29\"><script data-jscall-id=\"30\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('7c2e12c6-9872-4f7a-a66b-02213861210e');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"7c2e12c6-9872-4f7a-a66b-02213861210e\" data-jscall-id=\"28\" src=\"http://127.0.0.1:9284/7c2e12c6-9872-4f7a-a66b-02213861210e\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcome. Please discuss any larger changes in the issues before making a pull request to avoid wasted work.","category":"page"},{"location":"contributing/#Running-tests","page":"Contributing","title":"Running tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can run tests locally like so:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=test test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Unfortunately, Pkg.test() does not work properly at the moment. See this issue.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#ability_convergence_3pl","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-3PL-IRT-model","page":"How abilities converge on simulated 3PL data","title":"Running a CAT based on a synthetic correct/incorrect 3PL IRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: AbilityVarianceStateCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Responses: BooleanResponse\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using ComputerAdaptiveTesting.DummyData: dummy_full, std_normal, SimpleItemBankSpec, StdModel3PL\nusing ComputerAdaptiveTesting.MathTraits\n(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel3PL(), OneDimContinuousDomain(), BooleanResponse());\n    num_questions=100,\n    num_testees=3\n)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}}([0.21283195886829068, 0.0, 0.12178725900018512, 0.041370421501347454, 0.21635165869811687, 0.0, 0.08738992262890924, 0.24772889449786165, 0.04218774498878719, 0.14700645744185828, 0.3733405522390594, 0.0, 0.10410952835584347, 0.1489729026307751, 0.0, 0.06294044814944652, 0.0, 0.0, 0.0, 0.21830323876377777, 0.036351059408877125, 0.21759541741376084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15661276798365376, 0.0, 0.0, 0.27231270698902577, 0.278283625330411, 0.0, 0.0, 0.21111865185919065, 0.0, 0.0, 0.04441756917190262, 0.42781927741152637, 0.0, 0.13625916274737762, 0.0, 0.0, 0.15593946442325393, 0.0, 0.38507938322777274, 0.0, 0.0, 0.0043943518064903575, 0.22738755071248132, 0.0, 0.0, 0.06779682161850739, 0.0, 0.31388790750299655, 0.0, 0.0, 0.0, 0.0, 0.0064557465608515155, 0.03224056824166704, 0.06253943456430182, 0.011871230204323008, 0.14074664330892317, 0.0, 0.0, 0.1384219445917722, 0.0, 0.2702866427594479, 0.0, 0.1850757215992976, 0.0, 0.17668947240916796, 0.0, 0.0855362054167968, 0.0, 0.0, 0.03711599782931221, 0.02198639182736772, 0.0, 0.07727182230739799, 0.0, 0.0, 0.19430663314637298, 0.3012142285308338, 0.13561432600165985, 0.0, 0.0, 0.0, 0.06723369941978118, 0.017857053600401573, 0.0, 0.0, 0.1368188831192476, 0.0, 0.32364150559220684, 0.06932808020932817, 0.13884105012001663, 0.08617886259938015], ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-0.3042711864158614, 0.5903947057664494, 1.464856803658769, -0.5484982183198027, -1.38695604626857, -0.08795134156811371, 0.17175569325611562, -0.10650850267766468, 0.9229834350342597, 0.9863687924506194, -0.16225730765536767, -0.8354877454091473, 1.2492235401487517, 2.566664053049937, 0.650373820684626, -1.9254676301534828, 1.3832597144152785, 0.25083997775738104, -0.29991581945975027, 0.7863961452200456, -1.9245593936546173, 1.4653002291352966, -0.338920832642739, 0.05949411118962498, -1.903181965137762, -1.1069673367207158, -0.2879657010001877, -0.007253753209308403, -0.9760944803057643, -1.1370403844444519, -0.857787669606439, 0.5103476139373314, 0.965351371405062, -0.9408479621520879, 0.0521375136675305, -0.4677922437454132, -2.940417455371873, 0.6250273855973315, -0.9006219715470261, 0.7906226131895399, 0.14683827649381845, -0.273674139066647, 0.2963735399030018, 0.9273477067674228, -0.18952008911823948, 0.5480908533913278, 0.8135738599692135, -1.1292899985316927, -0.6495445670195278, -0.2150593817453094, 1.4331396412401873, 0.2254249139291694, -0.5394560495380213, 0.2970949849398292, 0.1868620936069227, -1.4161191196478793, -1.017335139007425, 0.312698642270498, -1.5080393624476023, -0.5196926182834305, -1.5755639458941684, -0.142993908319736, 1.7793101205495498, -1.3454215704229515, -0.07696390193836498, -0.15011414034827078, 0.5316647577422419, 0.6188863609600507, 2.3387379154494154, 0.9031208021276397, -0.13607604558389638, -0.11122951462545738, 0.7397539345940175, 0.27906205070149426, -1.1102564593074553, 0.3166141601415467, -0.2420434644523387, 1.1887458702571743, -0.6102640642795992, -0.2967426004232704, 0.8987233095592643, 0.5049580026066871, 0.05304275299998071, -0.20481995397855665, 0.8988004720875067, 0.48189096370001167, 0.06157829414648575, -0.5205332429463202, 0.3010194263259831, 1.9910846055959532, 0.9006599905433652, -0.5571728772356576, -0.869997909135743, 0.24299428272669069, 0.5894607442277544, -0.4237897611433018, -0.505261082498991, 0.6835470633976213, 0.005903011731668371, -0.21952788857141464], [1.3208986257829074, 1.3591936471623278, 1.0484294419627938, 1.0574618450513806, 0.9822308590053284, 0.9195980338421683, 1.2162013616546188, 1.0743702700398454, 0.9867037454990507, 1.210013853483155, 0.8368165079872157, 1.003910179130363, 1.250901983390694, 0.9287294805466875, 1.2647237834042984, 0.8143964507348402, 0.842637526499443, 0.9171061072406501, 0.8505513162800047, 1.134110257800288, 1.394880502470646, 1.334334522345301, 1.2699080723111549, 0.8659358715434764, 0.963431737750312, 1.1272091437329512, 1.4092821557072692, 0.7800244116927905, 0.9128493433621871, 1.2174566700450147, 1.2631727314594556, 0.8787411006054573, 1.0833546330799186, 0.9836084794505043, 1.2770112865130705, 1.1474103729378653, 0.9963731205442237, 1.0708649727346637, 0.7486682264414113, 0.875216120487996, 1.1563816088339522, 1.1041971790270073, 0.47577239196575905, 0.7359442620563228, 0.6123058677157159, 0.4306780059590908, 0.800422104995454, 0.8268269140156749, 1.0155852155707596, 1.014283984723318, 0.9701562717151209, 0.6944521705677481, 1.1915248850225935, 1.0141419994953937, 0.9562522306689987, 0.8082528352190922, 0.8890847462429511, 0.7465230113238057, 0.7576463806761644, 1.0395752081840144, 0.8198159506093323, 0.8649562341230315, 0.643506153435736, 0.6247339168143353, 0.94244211359956, 0.9840205222363062, 0.9117689200791683, 0.6954755429170136, 1.052511298985005, 0.7887044208248221, 1.3064010239561017, 0.5704239498027486, 0.9212178124105581, 0.794017432341556, 1.2203144440667706, 1.1650427515120831, 0.9779162667933455, 1.4297115174000896, 1.1838825207861898, 1.0213685952942855, 1.1648392252708701, 1.2946667494569366, 1.1011705571087755, 1.2553465929837622, 0.9825448958837012, 0.8638799107883415, 1.020244088360333, 0.7966062806723989, 0.7438708771066415, 0.8597232997820563, 0.8600382648038821, 0.9735826650195205, 1.0847543118660306, 1.0678466568247291, 0.7307124424467861, 0.8275790025605859, 1.0097561894097342, 1.0403189978970373, 0.8704396009000663, 1.002578577801403], nothing)), [\"Harum numquam nihil suscipit modi.\", \"Consequatur dolorem quis sed qui quos dolorem aut ad adipisci consequatur.\", \"Vero et sequi reprehenderit.\", \"Laudantium nisi veritatis et dolorem nostrum explicabo dolores sed repellendus laborum.\", \"Sit voluptate ea.\", \"Libero autem officia.\", \"Magni nemo dolor.\", \"Dolorum culpa atque expedita sit tempora temporibus necessitatibus iste.\", \"Eveniet.\", \"Sit aspernatur voluptatem consequatur explicabo.\", \"Possimus saepe consequatur unde.\", \"Incidunt quaerat omnis doloremque et vel laboriosam asperiores animi.\", \"Iste aperiam est.\", \"Vero iste repudiandae quasi quam.\", \"Modi minima temporibus quidem nemo similique.\", \"Et est voluptate architecto doloribus animi qui iste.\", \"At eligendi sequi nisi et corporis minus dolorem repellendus.\", \"Dolorum debitis labore id in dolorem commodi.\", \"Repudiandae quo porro aut aut et quos enim iusto quibusdam illum tempora.\", \"Qui natus est numquam voluptatibus non non ut.\", \"Ab tenetur assumenda.\", \"Dolorem ex omnis laboriosam voluptas ea impedit qui.\", \"Eveniet.\", \"Qui excepturi sint dolores impedit.\", \"Ut et eius id dolores quo ipsum mollitia qui dolorem.\", \"Animi ad quod accusantium minima ut natus aut.\", \"Accusantium dignissimos nisi voluptatem quas.\", \"Et iusto et similique odio doloribus ut sunt consequatur beatae.\", \"Qui sit quia.\", \"Laboriosam qui ducimus sed.\", \"Dolor tempore animi fugiat officia animi numquam illo voluptatem beatae inventore.\", \"Consequatur qui tenetur veniam dicta aspernatur consequatur nostrum et quis animi et.\", \"Provident suscipit fuga rerum.\", \"Laboriosam porro.\", \"Eos debitis soluta ea possimus labore officiis iste sed consequuntur vero.\", \"Consectetur earum provident molestiae vel.\", \"Dolor et amet sint cupiditate quod sit et et.\", \"In asperiores et cupiditate veritatis occaecati cupiditate ducimus unde enim.\", \"Aut et voluptas iure cumque ipsam libero sed qui.\", \"Assumenda ut.\", \"Est eius neque.\", \"Vel quod consequatur molestiae et ipsam aliquid.\", \"Sit sequi sunt id accusantium qui maxime.\", \"Odio dolorem numquam eos non ipsum sapiente atque rerum iste nobis.\", \"Consectetur nam laborum veniam eum odit.\", \"Quis est voluptatem vel quia enim omnis in eius a est.\", \"Voluptatibus.\", \"Laborum quibusdam ea omnis libero voluptatem expedita.\", \"Rerum quo quod cum voluptatem quia cupiditate harum sunt necessitatibus.\", \"Accusamus molestiae id est magni sit delectus incidunt.\", \"Ullam.\", \"Maxime sapiente veritatis voluptatem.\", \"Quae laboriosam veritatis deserunt praesentium et possimus corrupti et sed qui doloribus.\", \"Aut sunt omnis ducimus iste et aut amet voluptates iste quia.\", \"Corrupti eaque ipsam quos non quae est est.\", \"Qui asperiores pariatur a eum non eos perspiciatis molestiae et.\", \"Et optio sit mollitia.\", \"Consequatur.\", \"Velit sed voluptatem.\", \"Magnam officia.\", \"Rerum voluptatem accusantium.\", \"Aut quo ut molestias.\", \"Veritatis nihil ipsa ipsum perferendis perspiciatis eum.\", \"Corporis.\", \"Vel asperiores excepturi qui iure quam assumenda praesentium incidunt fugiat.\", \"Nulla qui id rem.\", \"Sint et quisquam quasi eius enim eum.\", \"Et sit modi neque et aut vitae.\", \"Natus et aut distinctio et possimus fuga non error ad.\", \"Sapiente ducimus reprehenderit eos veniam minima soluta.\", \"Pariatur asperiores sed voluptatibus repellendus a sint quia ratione nisi pariatur inventore.\", \"Ducimus qui et architecto.\", \"Autem molestiae tenetur maxime beatae eius.\", \"Quia reprehenderit culpa quos qui.\", \"Numquam harum maxime tempore ut nam iusto fuga porro.\", \"Non reprehenderit odit et nihil temporibus et non aut ad aut.\", \"Accusamus dolorem reprehenderit sequi laudantium fuga voluptate iusto magni.\", \"Veritatis sed beatae dolores facere dolorum eligendi.\", \"Eius ea animi maiores quia ea eos beatae veritatis consequatur.\", \"Nesciunt ut ipsa excepturi dolore rem non.\", \"Quasi quas.\", \"Ut magnam ad eum.\", \"Animi mollitia nam et.\", \"Optio harum voluptatum.\", \"Amet accusamus eos qui minus aut quia.\", \"Deleniti suscipit qui nulla voluptatem at ut beatae laborum aspernatur.\", \"Voluptas.\", \"Nostrum velit ut nisi vel sit fugit quia atque sed aliquam molestiae.\", \"Expedita occaecati omnis.\", \"Omnis et beatae aperiam laudantium.\", \"Delectus.\", \"Iusto qui consectetur.\", \"A incidunt.\", \"Laudantium sed quisquam occaecati mollitia tenetur incidunt id consequuntur aut quis.\", \"Magni eos et voluptatem eos voluptates asperiores.\", \"Dolores veniam iste cupiditate aut vel ipsa officia.\", \"Voluptatem.\", \"Libero enim esse in omnis reprehenderit in accusamus ut omnis.\", \"Consequatur.\", \"Velit doloremque voluptates odit soluta aut quidem sunt sed et ut.\"], [0.28523372695621646, 1.785067551473649, -2.6099468649174336], Bool[1 1 0; 1 1 0; 1 0 0; 1 1 0; 1 1 0; 0 1 0; 0 1 0; 1 1 1; 0 1 0; 0 1 0; 1 1 0; 1 1 0; 0 1 0; 1 0 0; 0 1 0; 1 1 0; 0 1 0; 1 1 0; 0 1 0; 0 1 0; 1 1 0; 1 0 0; 1 1 0; 1 1 0; 1 1 0; 1 1 0; 1 1 0; 1 1 0; 1 1 1; 1 1 0; 1 1 0; 1 1 0; 0 1 0; 1 1 0; 1 1 0; 0 1 1; 1 1 0; 0 1 0; 1 1 0; 1 1 0; 0 1 0; 1 1 0; 0 1 0; 1 0 0; 1 0 0; 0 1 0; 0 1 0; 1 1 0; 0 1 0; 1 1 0; 0 1 1; 1 1 0; 1 1 0; 0 1 0; 0 1 0; 1 1 0; 1 1 0; 0 1 1; 1 1 0; 1 1 0; 1 1 0; 1 1 0; 1 0 0; 1 1 1; 0 1 0; 1 1 0; 0 1 0; 1 1 0; 0 0 0; 0 1 0; 0 1 0; 1 1 1; 1 1 0; 1 1 1; 1 1 0; 1 1 0; 0 1 0; 0 0 0; 0 1 1; 1 1 0; 0 1 0; 1 1 0; 0 1 0; 1 1 0; 1 1 1; 0 1 0; 1 1 0; 1 1 0; 1 1 0; 0 0 0; 1 1 0; 1 1 0; 1 1 1; 1 1 0; 0 1 0; 1 1 0; 0 1 1; 0 0 1; 1 1 0; 1 1 0])","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"max_questions = 99\nintegrator = FixedGKIntegrator(-6, 6, 80)\ndist_ability_est = PriorAbilityEstimator(std_normal)\nability_estimator = MeanAbilityEstimator(dist_ability_est, integrator)\nrules = CatRules(\n    ability_estimator,\n    AbilityVarianceStateCriterion(dist_ability_est, integrator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\npoints = 500\nxs = range(-2.5, 2.5, length=points)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = abs(θ - true_θ)\nend","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"8\"><script data-jscall-id=\"9\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('47bd3877-cf7c-4fbc-8bb1-df2a92cbb548');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"47bd3877-cf7c-4fbc-8bb1-df2a92cbb548\" data-jscall-id=\"7\" src=\"http://127.0.0.1:9284/47bd3877-cf7c-4fbc-8bb1-df2a92cbb548\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_dist_fig = lh_evolution_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"11\"><script data-jscall-id=\"12\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('35400d66-86de-4d22-9983-43efac8d8070');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"35400d66-86de-4d22-9983-43efac8d8070\" data-jscall-id=\"10\" src=\"http://127.0.0.1:9284/35400d66-86de-4d22-9983-43efac8d8070\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can browse through the examples below. Each example has code and outputs, as well as links to download a script to run locally or to view as a Jupyter notebook on NBViewer. Some of the examples have interactive plots, and these will not currently work unless the scripts are run locally. TODO: Add binder links to examples.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you would like to run the examples as Jupyter notebooks locally to see interactive plots inline with the code, you can clone the repository and run docs/build_nbs.jl like so:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"$ git clone https://github.com/frankier/ComputerAdaptiveTesting.jl.git\n$ cd ComputerAdaptiveTesting\n$ julia --project=. docs/build_nbs.jl","category":"page"},{"location":"examples/#Examples-2","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Item Response Functions","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#ability_convergence_mirt","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-MIRT-model","page":"How abilities converge on simulated MIRT data","title":"Running a CAT based on a synthetic correct/incorrect MIRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: DRuleItemCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"dims = 2\nusing ComputerAdaptiveTesting.DummyData: dummy_full, std_mv_normal, SimpleItemBankSpec, StdModel4PL\nusing ComputerAdaptiveTesting.MathTraits\nusing ComputerAdaptiveTesting.Responses: BooleanResponse","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"TODO: pass in dims","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel4PL(), VectorContinuousDomain(), BooleanResponse()),\n    dims;\n    num_questions=10,\n    num_testees=2\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(ComputerAdaptiveTesting.ItemBanks.SlipItemBank{ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}}([0.0, 0.03944739311614995, 0.0, 0.0, 0.20785389631002707, 0.07715142267453434, 0.0, 0.2020782494239379, 0.0, 0.0035579091564717532], ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}([0.0, 0.09088543797559256, 0.0, 0.0, 0.0, 0.3233859595030796, 0.08897825129661999, 0.0, 0.05268411691314021, 0.0707255112907902], ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-1.6882937200934507, -1.4403982552245205, 0.04874911169175901, -1.2784757987480713, 1.3811717568502317, -0.5257902963827338, 1.705121764265157, 0.07431022108680074, -0.5771749977783581, -0.8426045061070555], [0.8769172741009107 1.0500613701932453 1.317719999436867 0.7242996844910368 0.9593516244155035 0.8751488109552672 0.895145849250899 0.8451341861920928 1.3179025638287536 0.9268316016217296; 1.4063593993986472 0.988660863520115 1.0979998306651704 1.2987220118467306 1.3266511621859423 1.1310380333891716 0.6841664293724314 1.0195496748532114 1.5370411497052971 0.9118818170427141], nothing))), [\"Omnis quia quos debitis at veniam perspiciatis.\", \"Non sed esse velit saepe saepe id facilis et inventore repudiandae qui.\", \"Ut laboriosam et culpa quasi dolor voluptatem nihil necessitatibus.\", \"Commodi officia voluptatem.\", \"Fugit quibusdam est modi voluptatibus accusantium iusto.\", \"Aspernatur sint minus corporis eaque quis perferendis consequuntur.\", \"Minus enim nulla nihil quia illum accusantium expedita distinctio ullam accusantium.\", \"Voluptas numquam natus dolore nemo earum voluptatem natus hic.\", \"Temporibus.\", \"Sequi non sit.\"], [0.881368443425489 0.8515268457866867; 1.16919206481339 -0.6670402596120457], Bool[1 1; 1 1; 1 1; 1 1; 0 0; 1 1; 1 0; 0 1; 1 0; 1 1])","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"max_questions = 9\nintegrator = CubaIntegrator([-6.0, -6.0], [6.0, 6.0], CubaVegas(); rtol=1e-2)\nability_estimator = MeanAbilityEstimator(PriorAbilityEstimator(std_mv_normal(dims)), integrator)\nrules = CatRules(\n    ability_estimator,\n    DRuleItemCriterion(ability_estimator),\n    FixedItemsTerminationCondition(max_questions)\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"CatRules\n  next_item: ComputerAdaptiveTesting.NextItemRules.ItemStrategyNextItemRule{ComputerAdaptiveTesting.NextItemRules.ExhaustiveSearch1Ply, ComputerAdaptiveTesting.NextItemRules.DRuleItemCriterion{ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}}}\n  termination_condition: ComputerAdaptiveTesting.TerminationConditions.FixedItemsTerminationCondition\n  ability_estimator: ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}\n  ability_tracker: ComputerAdaptiveTesting.Aggregators.NullAbilityTracker ComputerAdaptiveTesting.Aggregators.NullAbilityTracker()\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"XXX: We shouldn't need to specify xs here since the distributions are not used – rework","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"points = 3\nxs = repeat(range(-2.5, 2.5, length=points)', dims, 1)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator, abilities)\nfor testee_idx in axes(responses, 2)\n    @debug \"Running for testee\" testee_idx\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[:, testee_idx]\n    abs_err = sum(abs.(θ .- true_θ))\n    @info \"convergence\" true_θ θ abs_err\nend","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     0.881368443425489\n│     1.16919206481339\n│   θ =\n│    2-element Vector{Float64}:\n│     0.6500443421763566\n│     0.38064174278478796\n└   abs_err = 1.0198744232777344\n┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│      0.8515268457866867\n│     -0.6670402596120457\n│   θ =\n│    2-element Vector{Float64}:\n│      0.1762060098535587\n│     -0.11666525406954356\n└   abs_err = 1.22569584147563\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make a plot showing how the estimated value converges during the CAT.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_lines_fig = ability_convergence_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"<div data-jscall-id=\"17\"><script data-jscall-id=\"18\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('91e1f42e-4d7f-48b1-9f1f-cb2145c2b2e3');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"91e1f42e-4d7f-48b1-9f1f-cb2145c2b2e3\" data-jscall-id=\"16\" src=\"http://127.0.0.1:9284/91e1f42e-4d7f-48b1-9f1f-cb2145c2b2e3\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"","page":"Getting started","title":"Getting started","text":"This is the documentation for ComputerAdaptiveTesting. For information about the purpose of the package and its installation, please see the README.md.","category":"page"},{"location":"","page":"Getting started","title":"Getting started","text":"The documentation is currently mainly limited to Examples and an API reference. The currently recommended way to get started is by hacking an existing example.","category":"page"},{"location":"examples/examples/vocab_iq/#vocab_iq","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"section"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"First a 1-dimensional IRT model is fitted based on open response data to the vocabulary IQ test using the IRTSupport package which internally, this uses the mirt R package. Next, the model is used to administer the test interactively.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"using Base.Filesystem\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.DummyData: std_normal\nusing ComputerAdaptiveTesting.ExtraDistributions\nusing ComputerAdaptiveTesting.Sim\nusing ComputerAdaptiveTesting.NextItemRules\nusing ComputerAdaptiveTesting.TerminationConditions\nusing ComputerAdaptiveTesting.Aggregators\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Optimizers\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing IRTSupport.Datasets.VocabIQ\n\nfunction run_vocab_iq_cat()\n    item_bank = get_item_bank_cached()\n    integrator = FixedGKIntegrator(-6, 6, 61)\n    ability_integrator = AbilityIntegrator(integrator)\n    dist_ability_est = PriorAbilityEstimator(std_normal)\n    optimizer = AbilityOptimizer(OneDimOptimOptimizer(-6.0, 6.0, NelderMead()))\n    ability_estimator = ModeAbilityEstimator(dist_ability_est, optimizer)\n    @info \"run_cat\" ability_estimator\n    rules = CatRules(\n        ability_estimator,\n        AbilityVarianceStateCriterion(dist_ability_est, ability_integrator),\n        FixedItemsTerminationCondition(45)\n    )\n    function get_response(response_idx, response_name)\n        params = item_params(item_bank, response_idx)\n        println(\"Parameters for next question: $params\")\n        VocabIQ.prompt_response(response_idx)\n    end\n    function new_response_callback(tracked_responses, terminating)\n        if tracked_responses.responses.values[end] > 0\n            println(\"Correct\")\n        else\n            println(\"Wrong\")\n        end\n        ability = ability_estimator(tracked_responses)\n        var = variance_given_mean(ability_integrator, dist_ability_est, tracked_responses, ability)\n        println(\"Got ability estimate: $ability ± $var\")\n        println(\"\")\n    end\n    loop_config = CatLoopConfig(\n        rules=rules,\n        get_response=get_response,\n        new_response_callback=new_response_callback\n    )\n    run_cat(loop_config, item_bank)\nend\n\nrun_vocab_iq_cat()","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"}]
}
