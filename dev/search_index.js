var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [CATPlots]","category":"page"},{"location":"examples/examples/irfs/#Item-Response-Functions","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"section"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Item Response Functions","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"using Makie\nimport Pkg\nusing Distributions: Normal, cdf\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"xs = -8:0.05:8\nlines(xs, cdf.(Normal(), xs))\nlines!(xs, cdf.(NormalScaledLogistic(), xs))\ncurrent_figure()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"<div data-jscall-id=\"23\"><script data-jscall-id=\"24\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('f803ad9e-2580-4bb8-9d5c-a6cefde1f127');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"f803ad9e-2580-4bb8-9d5c-a6cefde1f127\" data-jscall-id=\"22\" src=\"http://127.0.0.1:9284/f803ad9e-2580-4bb8-9d5c-a6cefde1f127\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/examples/perf_plots/#Perf-plots","page":"Perf plots","title":"Perf plots","text":"","category":"section"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"Plots for performance of different integrators for ability estimators","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"using Makie\nimport Pkg\nusing CSV\nusing DataFrames\nusing CategoricalArrays: levels\nusing IterTools: chain\nusing ComputerAdaptiveTesting\nusing CATPlots\nusing CATPlots: LabelledToggleGrid, MenuGrid\n\nDOCS_DATA = pkgdir(ComputerAdaptiveTesting) * \"/docs/data/\"\n\n@automakie()\n\ndf = CSV.read(\n\t(DOCS_DATA * \"integrator_benchmark_results.csv\"),\n\tDataFrame;\n\ttypes=Dict(\n\t\t\"value\" => Float64,\n\t\t\"err\" => Float64,\n\t\t\"bytes\" => Int64,\n\t\t\"response\" => Int32,\n\t\t\"item_bank\" => Int32,\n\t\t\"dim\" => Int32,\n\t\t\"trial\" => Int32,\n\t\t\"time\" => Float64,\n\t\t\"gctime\" => Float64,\n\t\t\"rtol\" => Float64,\n\t)\n)\n\nfunction plot(df)\n\tfig = Figure()\n\tax = Axis(fig[1, 1])\n\n\tgroupables = [\"item_bank\", \"response\", \"trial\", \"dim\", \"integrator\"]\n\tregressables = [\"integrator\", \"dim\", \"rtol\", \"value\", \"err\", \"bytes\", \"gctime\"]\n\n\tMenu(fig, options = [\"none\", groupables...], default = \"none\")\n\ttoggles = []\n\tsliders = []\n\tslider_idxs = []\n\tmenus = []\n\tmenu_idxs = []\n\tfor (idx, groupable) in enumerate(groupables)\n\t\tpush!(toggles, (\n\t\t\tlabel = groupable,\n\t\t))\n\t\topts = sort(levels(df[!, groupable]))\n\t\tif eltype(opts) <: AbstractString\n\t\t\tpush!(slider_idxs, idx)\n\t\t\tpush!(menus, (\n\t\t\t\tlabel = groupable,\n\t\t\t\toptions = opts\n\t\t\t))\n\t\telse\n\t\t\tpush!(menu_idxs, idx)\n\t\t\tpush!(sliders, (\n\t\t\t\tlabel = groupable,\n\t\t\t\trange = opts\n\t\t\t))\n\t\tend\n\tend\n\ttgrid = LabelledToggleGrid(\n\t\tfig,\n\t\ttoggles...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tlsgrid = SliderGrid(\n\t\tfig,\n\t\tsliders...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tmgrid = MenuGrid(\n\t\tfig,\n\t\tmenus...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\n\tworking_df = Observable(nothing)\n\tfunction update_working_df(_)\n\t\tdf_prime = df\n\t\tslider_menu_vals = Vector{Any}(undef, length(sliders) + length(menus))\n\t\tslider_menu_vals[slider_idxs] = [slider.value for slider in lsgrid.sliders]\n\t\tslider_menu_vals[menu_idxs] = [menu.selection for menu in mgrid.menus]\n\t\tfor (groupable, toggle, value) in zip(groupables, tgrid.toggles, slider_menu_vals)\n\t\t\tif !toggle.value\n\t\t\t\tcontinue\n\t\t\tend\n\t\t\tdf_prime = filter(working_df, groupable => value)\n\t\tend\n\t\tworking_df[] = df_prime\n\tend\n\n\tfor observable in chain(\n\t\t(t.active for t in tgrid.toggles),\n\t\t(s.value for s in lsgrid.sliders),\n\t\t(m.selection for m in mgrid.menus)\n\t)\n\t\ton(update_working_df, observable)\n\tend\n\n\tx_var_menu = Menu(fig, options = regressables)\n\ty_var_menu = Menu(fig, options = regressables)\n\tcoded_menu = Menu(fig, options = regressables)\n\n\txs = @lift($working_df !== nothing && $(x_var_menu.selection) !== nothing ? $working_df[$(x_var_menu.selection)] : nothing)\n\tys = @lift($working_df !== nothing && $(y_var_menu.selection) !== nothing ? $working_df[$(y_var_menu.selection)] : nothing)\n\n\tscatter = @lift(\n\t\t$xs !== nothing && $ys !== nothing && $(coded_menu.selection) !== nothing ?\n\t\t\tlines!(\n\t\t\t\tax,\n\t\t\t\t$xs,\n\t\t\t\t$ys;\n\t\t\t\tcolor=$(coded_menu.selection)\n\t\t\t) : nothing\n\t)\n\n\tfig\nend\n\nplot(df)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"<div data-jscall-id=\"29\"><script data-jscall-id=\"30\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('c5eb8914-adc3-4915-b884-669a88b6896a');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"c5eb8914-adc3-4915-b884-669a88b6896a\" data-jscall-id=\"28\" src=\"http://127.0.0.1:9284/c5eb8914-adc3-4915-b884-669a88b6896a\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcome. Please discuss any larger changes in the issues before making a pull request to avoid wasted work.","category":"page"},{"location":"contributing/#Running-tests","page":"Contributing","title":"Running tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can run tests locally like so:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=test test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Unfortunately, Pkg.test() does not work properly at the moment. See this issue.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#ability_convergence_3pl","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-3PL-IRT-model","page":"How abilities converge on simulated 3PL data","title":"Running a CAT based on a synthetic correct/incorrect 3PL IRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: AbilityVarianceStateCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Responses: BooleanResponse\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using ComputerAdaptiveTesting.DummyData: dummy_full, std_normal, SimpleItemBankSpec, StdModel3PL\nusing ComputerAdaptiveTesting.MathTraits\n(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel3PL(), OneDimContinuousDomain(), BooleanResponse());\n    num_questions=100,\n    num_testees=3\n)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}}([0.0, 0.0, 0.190175961903691, 0.0, 0.07845501859474353, 0.0, 0.0, 0.0, 0.0, 0.002110753962141158, 0.18737796206321514, 0.0, 0.007645698361153888, 0.0, 0.0, 0.2526237348020263, 0.0, 0.0, 0.0, 0.0, 0.13069197773252653, 0.04574803944961858, 0.12867908062643962, 0.0, 0.0, 0.0, 0.2404308326186079, 0.06007254413144339, 0.1370038873468353, 0.08323669378023651, 0.0, 0.0, 0.0, 0.10441005741317254, 0.0, 0.0, 0.29289780992090936, 0.054476446838374985, 0.1225914036736222, 0.0, 0.11132245807767067, 0.0, 0.15596989794071736, 0.0, 0.0, 0.0, 0.06887645612853256, 0.0, 0.07301253479328389, 0.42788951861206004, 0.027523798061803363, 0.22162485094329348, 0.0, 0.13185840177485592, 0.059226517689375195, 0.3351430039293365, 0.0, 0.03156867966683307, 0.03705354841721614, 0.02058682451146877, 0.0, 0.0, 0.35515543751168577, 0.0, 0.0, 0.3382341616655556, 0.0, 0.0, 0.2829712751920203, 0.0, 0.0, 0.14117640023331499, 0.17141530389393866, 0.1458608525842551, 0.006485855112104458, 0.0, 0.0, 0.2430062307964206, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.07501932152596606, 0.0, 0.0, 0.0, 0.11507786418662116, 0.29053167769443317, 0.19375467998228402, 0.0, 0.33218426892406505, 0.15629495292440576, 0.0, 0.0, 0.0, 0.25925793818341314, 0.029660099211348368], ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [0.6708413939139017, -1.2977247825879417, -0.4105933762761622, 0.967512554100973, -0.06318263283480148, 1.2384494716776058, 1.9086661547487955, -0.4415927042057254, -2.4836883002002677, 0.17551006576694053, 2.0929989301191063, -0.23404803724074255, -0.5187573229444996, 0.3467562385076542, -0.38990453888831034, 1.0594314430736427, 0.0205222220555274, -0.3513524238485403, -0.07592231878742557, 0.4283363941446542, 1.0209804150908597, 0.23587577037487517, -0.5882833993470128, -0.8031625641690519, 0.8090793804657184, 1.094147681413284, 0.6732159436096575, 1.0458810432231802, -0.8767347597281359, -1.242243242770773, 1.963563719642454, 1.5075950252401342, 1.138043987807734, -0.09507441371887497, 2.2086289623623663, -0.14691092845825335, -1.847344274016404, -1.0088474484637935, 0.879543431086204, 0.5811302715501997, -0.11575493775045939, -1.097178816505705, 1.36237981606449, 0.6604786470114519, 0.5963498559498853, -1.4461002365499518, 0.16755257943505628, 1.3276113537863794, 0.611441747624714, 0.4916579274669498, 0.305932236661127, 1.666711368954828, 0.915842353703917, -0.7506339939532879, -0.5290012059906816, 1.5943547944826069, -1.1017876834570044, -0.24196358774436044, 1.148550705467171, 0.8731479241626287, 1.935441167573965, -0.8612519970642318, -1.0607774650669748, -1.3597656556783988, 0.9403861898293183, 0.3387757724811355, -0.4751517203289226, -0.162888350574415, -0.8816478107138164, 1.1166033772886195, 1.0860129707616286, -0.24491520765422342, 0.39790859018976726, -1.7140510043603874, 0.008610961067506497, 0.6046878271237056, -0.3617719314435384, 1.0050122786940727, 1.2477025152655947, 1.8587140378114195, 0.18048885864353476, 0.9262721662707614, 0.737081628929456, -0.30981232824270394, -0.7716740727829349, -0.7628787695365188, 0.5586356737727407, 0.0019032608348420103, 1.2725520490944626, 0.28607486195566445, -0.6552260423453001, 0.7855287123673055, 0.8872648194368936, 0.13493633793202708, 1.033535894141754, -0.12781809711434297, 1.6207604299308338, -0.737430441868377, 0.22665936856266614, -1.4299620054890385], [1.135091283272321, 0.9088730616466884, 1.235769648291377, 1.5124477819638296, 1.0473990665034267, 1.1829854641904238, 0.7941245366926735, 0.9548359607956847, 1.270329507997665, 1.064042621883133, 1.1529839630891756, 0.8095521185998755, 0.8355418176777243, 0.9159953628067227, 1.509912249123584, 0.9101599763406142, 0.6492201246945217, 0.914318420023183, 1.002341495812705, 1.0497409098047266, 1.4905200158137044, 1.0933994330911558, 1.173996966981318, 0.9264779720545427, 0.6086375327812565, 1.2026502013899312, 0.7481903243598702, 1.0947902919173553, 1.2849410620743498, 0.9618664634614563, 0.9965629761413921, 0.9800313704482806, 1.0637851624970154, 1.0230079652564534, 0.8933083780750768, 1.29790145176137, 1.5291573852069298, 1.4156798844482363, 1.324701890689569, 1.2376923204561618, 0.9638683054298386, 0.6915603257302643, 0.965308526538634, 0.8063512345600571, 0.8289457365814853, 1.0423715260624395, 0.7732515803752787, 0.9788407711415418, 0.6453747040214532, 1.0359718658616914, 1.1349361853097235, 0.8401936716702004, 0.9273776150181066, 1.0294031165967337, 0.801947599074599, 0.8428824110321502, 0.8977929196316339, 0.7981443481840547, 0.9629529033740479, 1.1709509407161034, 1.1212494076359645, 1.08263011923859, 0.9617371069114828, 1.1247632163567047, 0.6319478868315457, 0.9771369758103196, 0.9382681780081662, 1.1233110730320561, 0.6685733492192182, 0.8197572306895102, 0.9937424709630802, 1.2244532472400638, 0.9013897117460687, 0.9768495103622664, 1.4059778566714811, 1.1153406191780313, 0.6694908454174625, 1.1462374304112684, 1.025153750994132, 1.2875577278528596, 1.2637312339349935, 1.2294903100466164, 0.8494310255384898, 1.0016638588272537, 0.8636674616065355, 0.9360563736407831, 1.0400213758020895, 0.8713782130037874, 0.9159484393693667, 1.1953129153365953, 0.8910361234211758, 0.8424757127907999, 0.7353044526851488, 0.8087004828032314, 1.2146915267629912, 1.1092451292338237, 0.97864831242493, 0.9321069223781248, 0.7421108055493452, 1.0834067010231279], nothing)), [\"Amet non cupiditate eum ad.\", \"Vel facilis asperiores vel.\", \"Quaerat unde quia explicabo ex sed.\", \"Velit et neque maiores mollitia aut non et voluptatem pariatur.\", \"Quam explicabo deleniti atque quia qui et ad.\", \"Ex possimus suscipit.\", \"In quia cumque cumque beatae sint accusamus dolore sed dolor.\", \"Ad dolor iure ipsum tempora facilis.\", \"Quam vel.\", \"Fugiat sed.\", \"Quo voluptatem voluptate alias illum voluptatem sunt tempora animi ducimus.\", \"Vel doloribus fuga debitis delectus in.\", \"At quibusdam et.\", \"Unde vel labore atque fuga quisquam labore optio sit voluptate facilis mollitia.\", \"Debitis error laborum non occaecati in exercitationem quae dolores laudantium.\", \"Doloremque totam qui et facilis numquam exercitationem expedita.\", \"Et nisi est qui ut eaque in et.\", \"Assumenda eius sapiente ea id aut commodi recusandae.\", \"Velit assumenda optio.\", \"Voluptatum qui nam eaque repudiandae rerum quas ut sint esse et unde.\", \"Non officia.\", \"Ratione mollitia quis.\", \"Fuga est enim et ut quam molestias voluptate doloremque id officiis.\", \"Modi corporis eos voluptatem dolor quia est aliquam at earum maiores iure.\", \"Modi nostrum qui debitis commodi alias.\", \"Quia maiores neque mollitia nostrum quo dolorum.\", \"Eligendi omnis sunt et quo inventore et.\", \"Dolor eaque quibusdam quasi eius exercitationem modi non debitis quo et repellendus.\", \"Ipsum animi commodi est sit quis.\", \"Illo sunt in mollitia deleniti ipsa ut.\", \"Non sequi facere ullam aliquam necessitatibus quasi iste blanditiis animi.\", \"Nobis aspernatur dolor error et reprehenderit nihil quas animi suscipit.\", \"Culpa.\", \"Incidunt.\", \"Expedita optio omnis cum dolores alias aperiam reprehenderit quis maiores ratione officia.\", \"Vero est magni officiis enim in ad et optio quasi et.\", \"Ullam cum odio voluptatem.\", \"Est eaque minima quia vitae quia voluptatum deleniti est quia quas.\", \"Eum nihil accusantium est molestiae magnam aperiam omnis consequatur delectus occaecati veniam.\", \"Quo rerum repellat.\", \"Incidunt et ipsa reprehenderit est dolores velit deserunt omnis suscipit.\", \"Molestias maxime ea necessitatibus.\", \"Sunt quos iusto qui optio veritatis enim dolorem magni minima ut.\", \"Recusandae quia.\", \"Dolorem aut et blanditiis numquam sapiente ducimus natus consequatur voluptatibus magni.\", \"Distinctio consequatur.\", \"Ad ad voluptatem eos alias doloremque.\", \"Dolorem nulla porro et rem dignissimos omnis laboriosam ullam explicabo qui.\", \"Voluptate rerum sed iure laborum enim fugiat possimus ex.\", \"Quis fuga quia provident quibusdam exercitationem molestias possimus hic consequuntur voluptatem.\", \"Dolore quis adipisci laudantium aperiam et dicta dolorem quidem.\", \"Debitis ratione odit tempora atque voluptas ad qui eveniet unde vero.\", \"Totam neque sequi et in cupiditate ea rerum enim autem error.\", \"Ut vel exercitationem est amet.\", \"Ipsa voluptatum non dolorum ea voluptates eligendi.\", \"Odio odit accusamus repudiandae quasi rerum explicabo id minus doloribus.\", \"Consequatur facere et deleniti non est autem in nihil.\", \"Alias recusandae quod repellat.\", \"Nihil aliquid et blanditiis omnis nemo in sint quia similique in.\", \"Et sit quia fugiat veritatis.\", \"Esse possimus aut.\", \"Ipsam.\", \"Eos non quia.\", \"Harum corporis rerum et qui est repudiandae nihil quibusdam ab.\", \"Eum animi itaque cumque necessitatibus ab est harum reiciendis.\", \"Eveniet aut odio et blanditiis quia aut non.\", \"Rerum qui deserunt expedita illum unde.\", \"Magni fugiat laboriosam qui incidunt at ab.\", \"Cupiditate omnis cum quia.\", \"Est minus voluptas nostrum quis vero eos cupiditate.\", \"Ad id soluta.\", \"Tempore.\", \"Illo nemo repellendus qui.\", \"Facere tempora quis.\", \"Sed eius facilis necessitatibus voluptate molestiae et harum quia temporibus architecto.\", \"Recusandae cupiditate eos aliquid est similique perferendis nam expedita dolor nemo illo.\", \"Iusto odio molestias beatae aut.\", \"Ut.\", \"Voluptas cumque cumque.\", \"Molestias.\", \"Accusantium.\", \"Ea natus pariatur est tempore in voluptas porro necessitatibus ullam.\", \"Nulla sit et omnis libero eligendi.\", \"Minima consectetur nihil libero aperiam quibusdam magnam officia a rerum nihil.\", \"Accusantium optio tempore sed.\", \"Consequuntur non.\", \"Et eum enim non adipisci enim quis optio officiis.\", \"Ratione quibusdam.\", \"Fuga nesciunt ut sapiente odio praesentium.\", \"Et.\", \"Sed sequi non.\", \"Sed tempora laboriosam et et id doloremque sequi dolor adipisci.\", \"Sint ut quam officiis reprehenderit nisi assumenda.\", \"Veritatis ipsa reprehenderit qui aliquam nostrum.\", \"Est temporibus veniam eos eligendi quaerat at dignissimos et natus saepe.\", \"Qui et.\", \"Aut autem dolorem.\", \"Voluptas.\", \"Dolores accusamus aut est eum.\", \"Sunt nobis recusandae et.\"], [1.0629156368676964, -1.5386039556919648, -0.9514721419839617], Bool[0 0 0; 1 0 1; 1 0 1; 1 0 0; 0 0 0; 0 0 0; 0 0 0; 1 0 0; 1 1 1; 1 0 0; 0 1 0; 0 0 0; 1 0 0; 1 0 0; 1 0 1; 1 0 1; 1 0 1; 1 0 0; 1 0 0; 1 0 0; 0 0 0; 0 1 0; 1 0 0; 1 1 1; 1 0 0; 0 0 0; 0 0 1; 1 0 0; 1 0 1; 1 0 0; 0 0 0; 1 0 0; 0 0 0; 0 0 0; 0 0 0; 1 0 1; 1 1 1; 1 0 0; 0 0 0; 1 0 0; 1 0 1; 1 0 0; 1 0 0; 0 0 1; 1 0 0; 1 1 1; 1 0 0; 0 0 0; 0 0 0; 1 0 0; 1 0 0; 1 0 0; 0 0 0; 1 0 1; 1 1 1; 1 0 0; 0 1 0; 1 0 0; 1 0 0; 1 0 0; 0 0 0; 1 1 0; 1 0 1; 1 1 1; 1 0 0; 0 0 0; 1 0 1; 1 0 0; 1 1 1; 0 0 0; 1 0 0; 1 1 0; 1 0 0; 1 0 1; 1 0 0; 1 0 0; 1 0 0; 1 0 0; 0 0 0; 0 0 0; 1 0 0; 0 0 0; 1 0 0; 1 0 1; 1 0 1; 1 0 0; 1 0 0; 1 0 0; 0 0 0; 0 1 1; 1 0 1; 1 0 0; 1 0 0; 1 0 0; 1 1 0; 1 0 0; 0 0 0; 1 0 0; 1 1 0; 1 1 1])","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"max_questions = 99\nintegrator = FixedGKIntegrator(-6, 6, 80)\ndist_ability_est = PriorAbilityEstimator(std_normal)\nability_estimator = MeanAbilityEstimator(dist_ability_est, integrator)\nrules = CatRules(\n    ability_estimator,\n    AbilityVarianceStateCriterion(dist_ability_est, integrator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\npoints = 500\nxs = range(-2.5, 2.5, length=points)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = abs(θ - true_θ)\nend","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"8\"><script data-jscall-id=\"9\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('a92f909b-930d-45c7-b4ff-c48fc9967401');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"a92f909b-930d-45c7-b4ff-c48fc9967401\" data-jscall-id=\"7\" src=\"http://127.0.0.1:9284/a92f909b-930d-45c7-b4ff-c48fc9967401\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_dist_fig = lh_evolution_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"11\"><script data-jscall-id=\"12\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('ebc2c8c5-aa4f-4996-875b-ea08fb5b62b6');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"ebc2c8c5-aa4f-4996-875b-ea08fb5b62b6\" data-jscall-id=\"10\" src=\"http://127.0.0.1:9284/ebc2c8c5-aa4f-4996-875b-ea08fb5b62b6\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can browse through the examples below. Each example has code and outputs, as well as links to download a script to run locally or to view as a Jupyter notebook on NBViewer. Some of the examples have interactive plots, and these will not currently work unless the scripts are run locally. TODO: Add binder links to examples.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you would like to run the examples as Jupyter notebooks locally to see interactive plots inline with the code, you can clone the repository and run docs/build_nbs.jl like so:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"$ git clone https://github.com/frankier/ComputerAdaptiveTesting.jl.git\n$ cd ComputerAdaptiveTesting\n$ julia --project=. docs/build_nbs.jl","category":"page"},{"location":"examples/#Examples-2","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Item Response Functions","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#ability_convergence_mirt","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-MIRT-model","page":"How abilities converge on simulated MIRT data","title":"Running a CAT based on a synthetic correct/incorrect MIRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: DRuleItemCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"dims = 2\nusing ComputerAdaptiveTesting.DummyData: dummy_full, std_mv_normal, SimpleItemBankSpec, StdModel4PL\nusing ComputerAdaptiveTesting.MathTraits\nusing ComputerAdaptiveTesting.Responses: BooleanResponse","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"TODO: pass in dims","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel4PL(), VectorContinuousDomain(), BooleanResponse()),\n    dims;\n    num_questions=10,\n    num_testees=2\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(ComputerAdaptiveTesting.ItemBanks.SlipItemBank{ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}}([0.0, 0.0, 0.0, 0.3222051791122058, 0.0, 0.0, 0.26043622600827504, 0.0, 0.3380142661498923, 0.04011494152637418], ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}([0.0, 0.0, 0.0, 0.0, 0.4048139272371676, 0.0, 0.0, 0.0, 0.1713738574536168, 0.09647295933238288], ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-0.1892994979614123, -0.17481616341818274, 0.046694301676762036, -0.11374667046761268, 0.5708725092039798, 0.12026617993961669, 0.015892903720919636, 2.0392507200545174, 0.5161661919535006, -1.8555507386886134], [1.2644574655265195 1.345744402888328 0.7436332113179631 0.7737868679354684 0.7939999110573819 1.1526566488615881 1.2651521659183993 1.2766152904244181 0.9679888374785921 1.3320103914514292; 1.064394677489471 1.1025481801834747 0.6846372474709561 0.9401759263215158 1.5035671592878077 1.1431501932414727 0.6256159881709307 1.0281112354044113 1.3093454495946948 0.9676382668554294], nothing))), [\"Possimus assumenda nobis a aut exercitationem.\", \"Enim dolor.\", \"Nihil sed veritatis est.\", \"Aliquam qui.\", \"Fugit omnis illo soluta quas qui corporis autem placeat sequi.\", \"Voluptate at sit alias consectetur provident itaque dolores nihil.\", \"Nostrum hic.\", \"Voluptatem tempore occaecati dolor id omnis saepe nobis voluptas eos.\", \"Ut nobis.\", \"Autem nihil quia.\"], [0.3136080917942928 -1.0339635659900224; 1.2966119757674883 0.7684981795025537], Bool[1 1; 1 0; 1 0; 1 0; 1 0; 1 0; 1 0; 0 0; 1 0; 1 1])","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"max_questions = 9\nintegrator = CubaIntegrator([-6.0, -6.0], [6.0, 6.0], CubaVegas(); rtol=1e-2)\nability_estimator = MeanAbilityEstimator(PriorAbilityEstimator(std_mv_normal(dims)), integrator)\nrules = CatRules(\n    ability_estimator,\n    DRuleItemCriterion(ability_estimator),\n    FixedItemsTerminationCondition(max_questions)\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"CatRules\n  next_item: ComputerAdaptiveTesting.NextItemRules.ItemStrategyNextItemRule{ComputerAdaptiveTesting.NextItemRules.ExhaustiveSearch1Ply, ComputerAdaptiveTesting.NextItemRules.DRuleItemCriterion{ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}}}\n  termination_condition: ComputerAdaptiveTesting.TerminationConditions.FixedItemsTerminationCondition\n  ability_estimator: ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}\n  ability_tracker: ComputerAdaptiveTesting.Aggregators.NullAbilityTracker ComputerAdaptiveTesting.Aggregators.NullAbilityTracker()\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"XXX: We shouldn't need to specify xs here since the distributions are not used – rework","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"points = 3\nxs = repeat(range(-2.5, 2.5, length=points)', dims, 1)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator, abilities)\nfor testee_idx in axes(responses, 2)\n    @debug \"Running for testee\" testee_idx\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[:, testee_idx]\n    abs_err = sum(abs.(θ .- true_θ))\n    @info \"convergence\" true_θ θ abs_err\nend","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     0.3136080917942928\n│     1.2966119757674883\n│   θ =\n│    2-element Vector{Float64}:\n│     0.9303320073063528\n│     1.0508937419771167\n└   abs_err = 0.8624421493024317\n┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     -1.0339635659900224\n│      0.7684981795025537\n│   θ =\n│    2-element Vector{Float64}:\n│     -0.42392811137524955\n│     -0.46129492464789656\n└   abs_err = 1.8398285587652232\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make a plot showing how the estimated value converges during the CAT.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_lines_fig = ability_convergence_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"<div data-jscall-id=\"17\"><script data-jscall-id=\"18\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('f2538d04-646f-4813-8e6e-40f2ff93f327');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"f2538d04-646f-4813-8e6e-40f2ff93f327\" data-jscall-id=\"16\" src=\"http://127.0.0.1:9284/f2538d04-646f-4813-8e6e-40f2ff93f327\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"","page":"Getting started","title":"Getting started","text":"This is the documentation for ComputerAdaptiveTesting. For information about the purpose of the package and its installation, please see the README.md.","category":"page"},{"location":"","page":"Getting started","title":"Getting started","text":"The documentation is currently mainly limited to Examples and an API reference. The currently recommended way to get started is by hacking an existing example.","category":"page"},{"location":"examples/examples/vocab_iq/#vocab_iq","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"section"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"First a 1-dimensional IRT model is fitted based on open response data to the vocabulary IQ test using the IRTSupport package which internally, this uses the mirt R package. Next, the model is used to administer the test interactively.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"using Base.Filesystem\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.DummyData: std_normal\nusing ComputerAdaptiveTesting.ExtraDistributions\nusing ComputerAdaptiveTesting.Sim\nusing ComputerAdaptiveTesting.NextItemRules\nusing ComputerAdaptiveTesting.TerminationConditions\nusing ComputerAdaptiveTesting.Aggregators\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Optimizers\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing IRTSupport.Datasets.VocabIQ\n\nfunction run_vocab_iq_cat()\n    item_bank = get_item_bank_cached()\n    integrator = FixedGKIntegrator(-6, 6, 61)\n    ability_integrator = AbilityIntegrator(integrator)\n    dist_ability_est = PriorAbilityEstimator(std_normal)\n    optimizer = AbilityOptimizer(OneDimOptimOptimizer(-6.0, 6.0, NelderMead()))\n    ability_estimator = ModeAbilityEstimator(dist_ability_est, optimizer)\n    @info \"run_cat\" ability_estimator\n    rules = CatRules(\n        ability_estimator,\n        AbilityVarianceStateCriterion(dist_ability_est, ability_integrator),\n        FixedItemsTerminationCondition(45)\n    )\n    function get_response(response_idx, response_name)\n        params = item_params(item_bank, response_idx)\n        println(\"Parameters for next question: $params\")\n        VocabIQ.prompt_response(response_idx)\n    end\n    function new_response_callback(tracked_responses, terminating)\n        if tracked_responses.responses.values[end] > 0\n            println(\"Correct\")\n        else\n            println(\"Wrong\")\n        end\n        ability = ability_estimator(tracked_responses)\n        var = variance_given_mean(ability_integrator, dist_ability_est, tracked_responses, ability)\n        println(\"Got ability estimate: $ability ± $var\")\n        println(\"\")\n    end\n    loop_config = CatLoopConfig(\n        rules=rules,\n        get_response=get_response,\n        new_response_callback=new_response_callback\n    )\n    run_cat(loop_config, item_bank)\nend\n\nrun_vocab_iq_cat()","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"}]
}
