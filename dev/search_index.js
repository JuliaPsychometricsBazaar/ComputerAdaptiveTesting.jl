var documenterSearchIndex = {"docs":
[{"location":"examples/examples/irfs/#Item-Response-Functions-for-IRT/CAT","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"","category":"section"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"Item Response Functions for IRT/CAT","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"using Makie\nimport Pkg\nif isdefined(Main, :IJulia) && Main.IJulia.inited\n    using WGLMakie\nelseif \"GLMakie\" in keys(Pkg.project().dependencies)\n    using GLMakie\nelse\n    using CairoMakie\nend\nusing Distributions: Normal, cdf\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"xs = -8:0.05:8\nlines(xs, cdf.(Normal(), xs))\nlines!(xs, cdf.(NormalScaledLogistic(), xs))\ncurrent_figure()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions for IRT/CAT","title":"Item Response Functions for IRT/CAT","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#How-abilities-converge-on-simulated-3PL-data","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-3PL-IRT-model","page":"How abilities converge on simulated 3PL data","title":"Running a CAT based on a synthetic correct/incorrect 3PL IRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using Makie\nimport Pkg\nif isdefined(Main, :IJulia) && Main.IJulia.inited\n    using WGLMakie\nelseif \"GLMakie\" in keys(Pkg.project().dependencies)\n    using GLMakie\nelse\n    using CairoMakie\nend\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: AbilityVarianceStateCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.Plots\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using ComputerAdaptiveTesting.DummyData: dummy_3pl, std_normal\nRandom.seed!(42)\n(item_bank, question_labels, abilities, responses) = dummy_3pl(;num_questions=100, num_testees=3)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"const max_questions = 99\nconst integrator = FixedGKIntegrator(-6, 6, 80)\nconst dist_ability_est = PriorAbilityEstimator(std_normal)\nconst ability_estimator = MeanAbilityEstimator(dist_ability_est, integrator)\nconst rules = CatRules(\n    ability_estimator,\n    AbilityVarianceStateCriterion(dist_ability_est, integrator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\nconst points = 500\nxs = range(-2.5, 2.5, length=points)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = abs(θ - true_θ)\nend","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_dist_fig = lh_evoluation_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Here are the examples!","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Item Response Functions for IRT/CAT","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#How-abilities-converge-on-simulated-MIRT-data","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-MIRT-model","page":"How abilities converge on simulated MIRT data","title":"Running a CAT based on a synthetic correct/incorrect MIRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"using Makie\nimport Pkg\nif isdefined(Main, :IJulia) && Main.IJulia.inited\n    using WGLMakie\nelseif \"GLMakie\" in keys(Pkg.project().dependencies)\n    using GLMakie\nelse\n    using CairoMakie\nend\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: DRuleItemCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.Plots\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"const dims = 3\nusing ComputerAdaptiveTesting.DummyData: dummy_mirt_4pl, std_mv_normal\nRandom.seed!(42)\n(item_bank, question_labels, abilities, responses) = dummy_mirt_4pl(dims; num_questions=10, num_testees=2)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"const max_questions = 9\nconst integrator = MultiDimFixedGKIntegrator([-6.0, -6.0, -6.0], [6.0, 6.0, 6.0])\nconst ability_estimator = MeanAbilityEstimator(PriorAbilityEstimator(std_mv_normal(3)), integrator)\nconst rules = CatRules(\n    ability_estimator,\n    DRuleItemCriterion(ability_estimator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\nconst points = 500\nxs = repeat(range(-2.5, 2.5, length=points)', dims, 1)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    @debug \"Running for testee\" testee_idx\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = sum(abs(θ .- true_θ))\nend","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_dist_fig = lh_evoluation_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"#ComputerAdaptiveTesting","page":"Home","title":"ComputerAdaptiveTesting","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ComputerAdaptiveTesting.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.Plots, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"#ComputerAdaptiveTesting.install_extra-Tuple{Any}","page":"Home","title":"ComputerAdaptiveTesting.install_extra","text":"Installs groups of optional dependencies for specific functionality can be 'plots', 'dev' or 'all'.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Aggregators","page":"Home","title":"ComputerAdaptiveTesting.Aggregators","text":"This module takes care of integrating and optimizing over the ability/difficulty space. It includes TrackedResponses, which can store cumulative results during a test.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.Aggregators.EnumerationOptimizer","page":"Home","title":"ComputerAdaptiveTesting.Aggregators.EnumerationOptimizer","text":"Argmax + max over the ability likihood given a set of responses with a given coefficient using exhaustive search.\n\nTODO: Add item bank trait for enumerable item banks.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.Aggregators.RiemannEnumerationIntegrator","page":"Home","title":"ComputerAdaptiveTesting.Aggregators.RiemannEnumerationIntegrator","text":"In case an item bank is enumerable (e.g. GriddedItemBank), then this method integrates over the ability likihood given a set of responses with a given coefficient function using a Riemann sum (aka the rectangle rule).\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.Aggregators.maybe_tracked_ability_estimate-Tuple{ComputerAdaptiveTesting.Aggregators.TrackedResponses, Any}","page":"Home","title":"ComputerAdaptiveTesting.Aggregators.maybe_tracked_ability_estimate","text":"This method returns a tracked point estimate if it is has the given ability estimator, otherwise it computes it using the given ability estimator.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks","text":"This module provides abstract and concrete item banks, which store information about items and their parameters such as difficulty, most typically resulting from fitting an Item-Response Theory (IRT) model. It includes TrackedResponses, which can store cumulative results during a test.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank","text":"This item bank corresponds to the most commonly found version of MIRT in the literature. Its items feature multidimensional discriminations and its learners multidimensional abilities, but item difficulties are single-dimensional.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBank2PL-Tuple{Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBank2PL","text":"Convenience function to construct an item bank of the standard 2-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBank3PL-Tuple{Any, Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBank3PL","text":"Convenience function to construct an item bank of the standard 3-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBank4PL-NTuple{4, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBank4PL","text":"Convenience function to construct an item bank of the standard 4-parameter logistic single-dimensional IRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBankMirt2PL-Tuple{Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBankMirt2PL","text":"Convenience function to construct an item bank of the standard 2-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBankMirt3PL-Tuple{Any, Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBankMirt3PL","text":"Convenience function to construct an item bank of the standard 3-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.ItemBankMirt4PL-NTuple{4, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.ItemBankMirt4PL","text":"Convenience function to construct an item bank of the standard 4-parameter logistic MIRT model.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks._search-Union{Tuple{F}, Tuple{ComputerAdaptiveTesting.Integrators.Integrator, F, Any, Any, Any, Any}} where F","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks._search","text":"Binary search for the point x where the integral from -inf...x is target += precis\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.ItemBanks.irf-Tuple{ComputerAdaptiveTesting.ItemBanks.BootstrappedItemBank, Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.ItemBanks.irf","text":"The item-response function at a particular item and value of θ. This is the empirical/nonparametric variant.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Sim.auto_responder-Tuple{Any}","page":"Home","title":"ComputerAdaptiveTesting.Sim.auto_responder","text":"This function constructs a next item function which automatically responds according to responses.\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Sim.prompt_response-Tuple{Any, Any}","page":"Home","title":"ComputerAdaptiveTesting.Sim.prompt_response","text":"This response callback simply prompts \n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Sim.run_cat-Tuple{CatLoopConfig, ComputerAdaptiveTesting.ItemBanks.AbstractItemBank}","page":"Home","title":"ComputerAdaptiveTesting.Sim.run_cat","text":"Run a given CatLoopConfig\n\n\n\n\n\n","category":"method"},{"location":"#ComputerAdaptiveTesting.Plots","page":"Home","title":"ComputerAdaptiveTesting.Plots","text":"This module contains helpers for creating CAT/IRT related plots. This module requires the optional depedencies AlgebraOfGraphics, DataFrames and Makie to be installed.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.NextItemRules","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules","text":"This module implements the next item selection rules, which form the main part of CAT.\n\nBibliography\n\n[1] Linden, W. J., & Pashley, P. J. (2009). Item selection and ability estimation in adaptive testing. In Elements of adaptive testing (pp. 3-30). Springer, New York, NY.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.NextItemRules.catr_next_item_aliases","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules.catr_next_item_aliases","text":"This mapping provides next item rules through the same names that they are available through in the catR R package. TODO compability with mirtcat\n\n\n\n\n\n","category":"constant"},{"location":"#ComputerAdaptiveTesting.NextItemRules.AbilityVarianceStateCriterion","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules.AbilityVarianceStateCriterion","text":"This StateCriterion returns the variance of the ability estimate given a set of responses.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.NextItemRules.ExpectationBasedItemCriterion","page":"Home","title":"ComputerAdaptiveTesting.NextItemRules.ExpectationBasedItemCriterion","text":"This ItemCriterion wraps a StateCriterion and looks at its expected value for a particular item 1-ply ahead.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.Integrators","page":"Home","title":"ComputerAdaptiveTesting.Integrators","text":"This module provides a common interface to different integration techniques.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.IntegralCoeffs","page":"Home","title":"ComputerAdaptiveTesting.IntegralCoeffs","text":"These are helpers for weighting integrals of p.d.f.s for calculating basic stats.\n\nThe main idea of doing it this way is to have a single instance of these to reuse specializations and to use structs so as to be able to control the level of specialization.\n\n\n\n\n\n","category":"module"},{"location":"#ComputerAdaptiveTesting.CatConfig.CatLoopConfig","page":"Home","title":"ComputerAdaptiveTesting.CatConfig.CatLoopConfig","text":"Configuration for a simulatable CAT.\n\n\n\n\n\n","category":"type"},{"location":"#ComputerAdaptiveTesting.CatConfig.CatRules","page":"Home","title":"ComputerAdaptiveTesting.CatConfig.CatRules","text":"Configuration of the rules for a CAT. This all includes all the basic rules for the CAT's operation, but not the item bank, nor any of the interactivity hooks needed to actually run the CAT.\n\nThis may be more a more convenient layer to integrate than CatLoopConfig if you want to write your own CAT loop rather than using hooks.\n\n\n\n\n\n","category":"type"}]
}
