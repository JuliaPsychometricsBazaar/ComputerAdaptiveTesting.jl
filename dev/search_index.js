var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [CATPlots]","category":"page"},{"location":"examples/examples/irfs/#Item-Response-Functions","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"section"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Item Response Functions","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"using Makie\nimport Pkg\nusing Distributions: Normal, cdf\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"xs = -8:0.05:8\nlines(xs, cdf.(Normal(), xs))\nlines!(xs, cdf.(NormalScaledLogistic(), xs))\ncurrent_figure()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"<div data-jscall-id=\"23\"><script data-jscall-id=\"24\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('7ced9051-193c-48ce-b516-e2eb9e228302');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"7ced9051-193c-48ce-b516-e2eb9e228302\" data-jscall-id=\"22\" src=\"http://127.0.0.1:9284/7ced9051-193c-48ce-b516-e2eb9e228302\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/examples/perf_plots/#Perf-plots","page":"Perf plots","title":"Perf plots","text":"","category":"section"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"Plots for performance of different integrators for ability estimators","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"using Makie\nimport Pkg\nusing CSV\nusing DataFrames\nusing CategoricalArrays: levels\nusing IterTools: chain\nusing ComputerAdaptiveTesting\nusing CATPlots\nusing CATPlots: LabelledToggleGrid, MenuGrid\n\nDOCS_DATA = pkgdir(ComputerAdaptiveTesting) * \"/docs/data/\"\n\n@automakie()\n\ndf = CSV.read(\n\t(DOCS_DATA * \"integrator_benchmark_results.csv\"),\n\tDataFrame;\n\ttypes=Dict(\n\t\t\"value\" => Float64,\n\t\t\"err\" => Float64,\n\t\t\"bytes\" => Int64,\n\t\t\"response\" => Int32,\n\t\t\"item_bank\" => Int32,\n\t\t\"dim\" => Int32,\n\t\t\"trial\" => Int32,\n\t\t\"time\" => Float64,\n\t\t\"gctime\" => Float64,\n\t\t\"rtol\" => Float64,\n\t)\n)\n\nfunction plot(df)\n\tfig = Figure()\n\tax = Axis(fig[1, 1])\n\n\tgroupables = [\"item_bank\", \"response\", \"trial\", \"dim\", \"integrator\"]\n\tregressables = [\"integrator\", \"dim\", \"rtol\", \"value\", \"err\", \"bytes\", \"gctime\"]\n\n\tMenu(fig, options = [\"none\", groupables...], default = \"none\")\n\ttoggles = []\n\tsliders = []\n\tslider_idxs = []\n\tmenus = []\n\tmenu_idxs = []\n\tfor (idx, groupable) in enumerate(groupables)\n\t\tpush!(toggles, (\n\t\t\tlabel = groupable,\n\t\t))\n\t\topts = sort(levels(df[!, groupable]))\n\t\tif eltype(opts) <: AbstractString\n\t\t\tpush!(slider_idxs, idx)\n\t\t\tpush!(menus, (\n\t\t\t\tlabel = groupable,\n\t\t\t\toptions = opts\n\t\t\t))\n\t\telse\n\t\t\tpush!(menu_idxs, idx)\n\t\t\tpush!(sliders, (\n\t\t\t\tlabel = groupable,\n\t\t\t\trange = opts\n\t\t\t))\n\t\tend\n\tend\n\ttgrid = LabelledToggleGrid(\n\t\tfig,\n\t\ttoggles...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tlsgrid = SliderGrid(\n\t\tfig,\n\t\tsliders...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tmgrid = MenuGrid(\n\t\tfig,\n\t\tmenus...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\n\tworking_df = Observable(nothing)\n\tfunction update_working_df(_)\n\t\tdf_prime = df\n\t\tslider_menu_vals = Vector{Any}(undef, length(sliders) + length(menus))\n\t\tslider_menu_vals[slider_idxs] = [slider.value for slider in lsgrid.sliders]\n\t\tslider_menu_vals[menu_idxs] = [menu.selection for menu in mgrid.menus]\n\t\tfor (groupable, toggle, value) in zip(groupables, tgrid.toggles, slider_menu_vals)\n\t\t\tif !toggle.value\n\t\t\t\tcontinue\n\t\t\tend\n\t\t\tdf_prime = filter(working_df, groupable => value)\n\t\tend\n\t\tworking_df[] = df_prime\n\tend\n\n\tfor observable in chain(\n\t\t(t.active for t in tgrid.toggles),\n\t\t(s.value for s in lsgrid.sliders),\n\t\t(m.selection for m in mgrid.menus)\n\t)\n\t\ton(update_working_df, observable)\n\tend\n\n\tx_var_menu = Menu(fig, options = regressables)\n\ty_var_menu = Menu(fig, options = regressables)\n\tcoded_menu = Menu(fig, options = regressables)\n\n\txs = @lift($working_df !== nothing && $(x_var_menu.selection) !== nothing ? $working_df[$(x_var_menu.selection)] : nothing)\n\tys = @lift($working_df !== nothing && $(y_var_menu.selection) !== nothing ? $working_df[$(y_var_menu.selection)] : nothing)\n\n\tscatter = @lift(\n\t\t$xs !== nothing && $ys !== nothing && $(coded_menu.selection) !== nothing ?\n\t\t\tlines!(\n\t\t\t\tax,\n\t\t\t\t$xs,\n\t\t\t\t$ys;\n\t\t\t\tcolor=$(coded_menu.selection)\n\t\t\t) : nothing\n\t)\n\n\tfig\nend\n\nplot(df)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"<div data-jscall-id=\"29\"><script data-jscall-id=\"30\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('ceae834f-c403-404f-8a88-c90a31c50c3a');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"ceae834f-c403-404f-8a88-c90a31c50c3a\" data-jscall-id=\"28\" src=\"http://127.0.0.1:9284/ceae834f-c403-404f-8a88-c90a31c50c3a\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcome. Please discuss any larger changes in the issues before making a pull request to avoid wasted work.","category":"page"},{"location":"contributing/#Running-tests","page":"Contributing","title":"Running tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can run tests locally like so:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=test test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Unfortunately, Pkg.test() does not work properly at the moment. See this issue.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#ability_convergence_3pl","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-3PL-IRT-model","page":"How abilities converge on simulated 3PL data","title":"Running a CAT based on a synthetic correct/incorrect 3PL IRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: AbilityVarianceStateCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Responses: BooleanResponse\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using ComputerAdaptiveTesting.DummyData: dummy_full, std_normal, SimpleItemBankSpec, StdModel3PL\nusing ComputerAdaptiveTesting.MathTraits\n(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel3PL(), OneDimContinuousDomain(), BooleanResponse());\n    num_questions=100,\n    num_testees=3\n)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}}([0.0, 0.0, 0.12710095078633735, 0.0, 0.0, 0.07515264240183439, 0.0, 0.025815637000886616, 0.052553424681619644, 0.0, 0.0, 0.22945419419883756, 0.0, 0.1540203008299983, 0.34112013500685506, 0.28515825326683325, 0.0, 0.35899211047780205, 0.07927274316920847, 0.1550144095505449, 0.46917599896654627, 0.22948415789664614, 0.0, 0.0, 0.15160425413230563, 0.0, 0.0, 0.47820410878585184, 0.0, 0.0, 0.0, 0.0, 0.2565719522361258, 0.011932377513529099, 0.11823173921042625, 0.1339448159183533, 0.0, 0.0, 0.20810769307703647, 0.0, 0.1872300841612291, 0.0, 0.0, 0.0, 0.2930769152289591, 0.1158429230300026, 0.06663020797761897, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20635020928632059, 0.19146960403999103, 0.0, 0.0, 0.08357974929177503, 0.07426744072875552, 0.2968250146762336, 0.0, 0.0, 0.03575642914342, 0.059148020771411916, 0.1871994266428788, 0.0, 0.1958876780871865, 0.0, 0.0, 0.0024005409845095247, 0.411193835145373, 0.0, 0.2010205559833219, 0.0, 0.32233483954154496, 0.0, 0.33817235918527, 0.24139960496473747, 0.23148207517888758, 0.5856554719277065, 0.0, 0.0, 0.04987448056353201, 0.03143710055180416, 0.0, 0.15456601989584304, 0.12162361583957744, 0.0, 0.3070547173370873, 0.28262987578112647, 0.0, 0.0, 0.10852004513967978, 0.30343087088323034, 0.0, 0.0, 0.140799083415679, 0.0, 0.0, 0.0, 0.0], ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-0.91512121013479, -1.8392108331628134, 1.235512661208399, 0.8298176771433678, 2.541296134039358, -1.2398303642292532, 1.2104017608612068, -1.5826846301013948, 1.0822360410765484, -0.023591987757399246, -0.10426066793671815, -0.8421455028781237, 1.6430686073315877, -0.2950190341265806, 0.38564303185814697, -0.04052973839118464, 2.047368515319981, -1.2923891424775957, -0.13563846126970636, 0.9518578036825388, -0.9185631836360992, -0.07157306054570493, -1.268142692510678, -0.1397467685825955, 0.8312967451553823, 0.043423219539880896, -0.6985619264180013, -0.4732404592564117, 1.8374210033658234, -1.5249727633772665, 0.840017242407881, 0.4498960967353742, -0.43925351114956596, -0.16011893265995725, 1.4250149030750565, 0.98930419958469, -1.0210551425697507, -0.07707847543643732, -0.1860609566704287, 0.3766227604692318, 1.4258239316310315, 1.5204323440563028, 0.34667879942562835, 0.7432023149204616, -0.11418869599894531, -1.0147617077481301, 1.2026290636440504, -0.059344391532114876, 0.3429850838723811, 0.7189481320709765, -0.29133264197760805, 0.3348835746457518, 0.37910626084619214, 0.4785322969265835, 1.0725690040977376, -0.6971146149407278, -0.91993567874316, -1.395693012947431, 0.43553291268191646, 2.800686163149148, 0.2653392064616482, 0.5647232760733507, -1.7131725075224682, -2.012849956436539, 0.2473877586421753, -1.228102235858066, 0.6248541321899848, -3.3147115042686583, 0.06273062013730407, 0.041307921348690685, -1.0406528929420846, 1.3080769454825598, 0.7874494321738085, -0.31254105575807295, -0.3365606721317206, 0.34076900871795396, -0.20311128003791742, 2.7722007801598814, 1.3686611037973362, 0.6062427889730879, 0.08038027645767315, 0.07591578755227105, 1.0102439941591537, -0.1304901728489183, 0.6551512889029245, -0.5041960405449641, -0.771738294343235, 0.5001553310792292, 0.7749068456967526, -0.09802847032740641, 1.7585993414091736, -1.147213742695953, 1.6605507478979389, 0.614962917774098, -0.5580979300490565, 1.8240110826603666, -1.0070698578664046, 0.6576934039715717, -0.8857554282004992, 1.1931338809485237], [0.7169962192254158, 1.3561088176849732, 0.38359465234671064, 0.6744886885388826, 1.281186056475163, 0.9837237114534019, 1.015736372411699, 0.6789466770302257, 1.030801758566908, 0.7491533339245195, 1.166883052851183, 1.4319091198688227, 1.0569983856494065, 1.2260854368391134, 0.620953252678419, 0.9024674332931826, 0.971914924885525, 1.5801987620455757, 0.876265291226699, 0.4169255636862137, 1.1702894068715888, 1.129193599657874, 1.0178245124714294, 1.0460284763703895, 1.5598638248197907, 0.7409996266802458, 1.1729616160640524, 1.116191849684451, 1.1550327574574797, 1.057353669500432, 0.9599461979233836, 0.8822037114894312, 0.8872536615046718, 0.7832675540832946, 1.3680251271768826, 0.7742734732323653, 0.5444905324766265, 1.2183175609214854, 0.9456559451559556, 1.1534478843768703, 0.8786011542409338, 1.0538169908213544, 0.9746651030998394, 1.0801495805591397, 0.6733359188051791, 0.9440270751151671, 1.1341548263634917, 1.1525145201442246, 1.259180365222574, 0.9333887134226233, 1.1538917313941937, 0.9859942379910219, 1.1504983931873691, 0.6942907180657031, 0.7882174390040767, 1.1779811967008111, 0.8630579304272155, 1.1194845809619118, 1.0917690719498614, 0.7663553641997367, 1.1776338733799807, 0.6341711211449077, 1.0657068423035536, 0.9675476877459549, 0.9376406486840154, 1.0045347662119197, 0.5838044657958078, 0.9239571654293693, 0.6713356633305322, 1.0267951866824823, 0.7254245956398622, 1.1548512248340177, 0.6970825118700393, 1.1439329903798172, 1.4356818955337964, 1.028151315278557, 0.9861578197616572, 1.1075037097116207, 1.1791729473006727, 1.0263778450837469, 0.9413070981835711, 1.4288629022116597, 0.975070492025071, 1.1020258124498432, 1.042782504303593, 1.2371918826298407, 0.9712229290783312, 0.9474830736017306, 0.6386499592667503, 0.9205231121625982, 0.7157303669187058, 1.029566882570512, 0.9689530252159968, 1.2094837811656112, 1.0914631905219085, 1.0301191905087017, 0.7503849963805226, 1.0593816481090557, 0.8394598157553796, 0.8509926993048443], nothing)), [\"Asperiores officiis reprehenderit eveniet at.\", \"Fugit nihil omnis.\", \"Et rerum aliquid et minima fugiat natus totam.\", \"Labore excepturi et sed aperiam nisi et expedita perferendis doloribus.\", \"Culpa quisquam omnis voluptatem natus voluptatem nemo ipsa ut temporibus est.\", \"Nihil.\", \"In ad deleniti est ut repellat aspernatur.\", \"Est vel delectus quibusdam illum distinctio quo blanditiis.\", \"Placeat nostrum qui corporis ipsum necessitatibus sed aut dolores minima.\", \"Deserunt similique qui molestiae sed facilis molestias.\", \"Ipsam.\", \"Aut tempore quibusdam iusto ipsam in dolor.\", \"Velit quibusdam.\", \"Placeat autem sequi quia et aut optio possimus et molestiae unde laboriosam.\", \"Rerum.\", \"Repudiandae fugiat ut.\", \"Eos libero alias ut aspernatur molestiae et similique.\", \"Voluptate sunt distinctio autem corrupti ut aliquam fugit qui hic voluptatem.\", \"Est laborum in totam non necessitatibus ab dolor pariatur quia ratione ex.\", \"Placeat dolore eius laborum nostrum et beatae provident dolorem molestias.\", \"Qui harum neque odit qui qui veniam fuga.\", \"Et molestias repellendus non explicabo qui corrupti.\", \"Et sed deleniti labore amet dolorem.\", \"Distinctio.\", \"Fugit voluptate qui fuga nisi repellat consequatur et in earum.\", \"Vero omnis atque cumque enim sit facere officia.\", \"Ullam ex.\", \"Dolores consequatur quod voluptate debitis consequuntur culpa vero eos eius.\", \"Ullam dolores sunt hic amet iure sapiente deleniti expedita voluptates.\", \"Et consectetur possimus unde deserunt exercitationem eaque molestiae sed labore.\", \"Et.\", \"Modi voluptates voluptatem ut rem rerum laudantium magni reprehenderit corrupti exercitationem dolorem.\", \"Mollitia deleniti culpa qui quam fugiat ut eligendi quidem qui omnis cum.\", \"Atque ut exercitationem est.\", \"Cumque.\", \"Laboriosam expedita cupiditate consequatur fugiat eaque.\", \"Ea dolor.\", \"Tempore consequatur corrupti nulla minima provident et ipsum voluptatibus quidem.\", \"Et amet dolor aut ipsam animi.\", \"Dolor assumenda ut cupiditate voluptate.\", \"Vitae repellendus aut et inventore porro.\", \"Sit ullam nihil aut iure et labore fuga labore libero laborum animi.\", \"Rerum libero.\", \"Similique ipsam aut culpa numquam illo eaque est.\", \"Dolorem corporis quibusdam illo quia reiciendis architecto voluptatem dicta.\", \"Eos.\", \"Iure pariatur vitae pariatur velit sit eum ut neque occaecati.\", \"Corporis quia mollitia suscipit magnam.\", \"Quia facere est quasi sunt animi unde sint eos.\", \"Adipisci qui delectus quos.\", \"Et animi sunt quia.\", \"Aut eligendi ipsam rerum sunt numquam fugit rerum qui ut dolore.\", \"Repellendus modi eius cumque omnis sed voluptatem.\", \"Quia quae.\", \"Accusamus quia fuga aut.\", \"Reiciendis in et ut et iure modi voluptate quisquam saepe.\", \"Pariatur explicabo maxime laudantium enim exercitationem omnis saepe voluptatibus.\", \"Provident veniam deserunt.\", \"Tempora et.\", \"Sequi nihil delectus eius voluptate.\", \"Quos soluta rem dolorum rerum eos nihil mollitia tempora.\", \"Rem impedit.\", \"Assumenda asperiores libero.\", \"Ut quod.\", \"Maiores temporibus ab corrupti at.\", \"Enim deleniti asperiores.\", \"Quo et voluptas sunt expedita ullam quidem et saepe fugiat.\", \"Voluptatem optio.\", \"Recusandae maxime.\", \"Iste minus voluptatem dolore.\", \"Voluptas dolorem voluptas tempore maiores consectetur similique dolorem et eos.\", \"Tenetur omnis aliquam et doloremque est et consequatur assumenda nulla.\", \"Amet non veniam nobis assumenda repudiandae dicta consequatur voluptatem.\", \"Corrupti quisquam odio nisi dolorum praesentium vero.\", \"Enim.\", \"Quisquam porro excepturi qui qui sint.\", \"Hic sint vel quam quaerat corrupti et non sequi.\", \"In in.\", \"Aut corporis.\", \"Amet beatae aut sed est occaecati et.\", \"Animi sit consequuntur aliquid iure.\", \"Libero culpa porro in sequi facere ab aut est qui ut consequatur.\", \"Hic nesciunt vel voluptas delectus natus officiis nobis deleniti.\", \"Et recusandae voluptas quo nisi sunt non est molestiae voluptatibus est.\", \"Odit magnam magni officia est deleniti qui consectetur laudantium tempore qui.\", \"Impedit esse quisquam veritatis praesentium eaque voluptas est rerum sed sunt praesentium.\", \"Sed sit optio libero molestias dolores nobis aut eum nisi repellendus ducimus.\", \"Iste animi blanditiis vel quam eius eius.\", \"Voluptatibus saepe quia.\", \"Et eos consectetur praesentium quibusdam.\", \"Dolorem.\", \"Pariatur dicta non alias est quasi dolor molestiae iusto.\", \"Sit enim asperiores corporis veritatis et ut.\", \"Sit officia tempora sed omnis ullam corporis ipsam sed eos.\", \"Officiis quia quam.\", \"Tempore ut voluptas fugiat aut est ut cupiditate autem et.\", \"At aliquid reprehenderit.\", \"Dolorem iure voluptatem saepe.\", \"Aliquid veniam aliquid nisi occaecati mollitia.\", \"Distinctio enim rem facere ratione veritatis magni dolorem porro nihil voluptas corrupti.\"], [-0.0077626921499062435, -0.41964170703360454, -1.4059477068980915], Bool[0 1 0; 1 1 1; 0 1 0; 0 0 1; 0 0 0; 1 1 1; 0 0 0; 1 0 1; 0 0 0; 1 1 0; 0 0 1; 1 0 1; 0 0 0; 0 0 0; 0 1 0; 1 0 0; 0 0 0; 1 1 1; 0 1 0; 1 0 0; 1 1 1; 1 0 0; 1 1 0; 1 0 0; 0 0 0; 0 1 0; 1 1 1; 1 1 0; 0 0 0; 1 1 1; 0 1 0; 0 1 0; 1 1 0; 0 0 1; 0 0 0; 0 0 0; 1 1 0; 1 1 1; 1 0 0; 0 0 0; 0 1 0; 0 0 0; 1 0 0; 0 0 0; 1 1 0; 1 1 0; 0 0 0; 0 1 0; 0 0 0; 0 0 0; 0 0 0; 0 0 0; 0 1 0; 1 0 1; 0 0 0; 1 1 0; 0 1 0; 1 1 1; 1 1 0; 0 0 0; 0 0 0; 1 0 0; 1 1 1; 0 1 1; 0 0 0; 1 1 1; 1 1 0; 1 1 1; 0 0 0; 1 0 1; 1 0 0; 0 0 0; 0 0 0; 1 1 0; 1 1 0; 1 1 0; 1 0 0; 0 0 0; 1 1 1; 1 0 0; 0 1 0; 1 0 0; 0 0 0; 1 0 0; 0 0 0; 0 1 0; 1 1 0; 0 0 0; 0 0 0; 1 0 0; 0 0 0; 1 1 1; 0 0 0; 0 0 0; 1 1 0; 0 0 0; 1 1 1; 0 0 0; 1 1 0; 0 0 0])","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"max_questions = 99\nintegrator = FixedGKIntegrator(-6, 6, 80)\ndist_ability_est = PriorAbilityEstimator(std_normal)\nability_estimator = MeanAbilityEstimator(dist_ability_est, integrator)\nrules = CatRules(\n    ability_estimator,\n    AbilityVarianceStateCriterion(dist_ability_est, integrator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\npoints = 500\nxs = range(-2.5, 2.5, length=points)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = abs(θ - true_θ)\nend","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"8\"><script data-jscall-id=\"9\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('06e0721f-73ac-465c-bb46-f8c911e6c215');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"06e0721f-73ac-465c-bb46-f8c911e6c215\" data-jscall-id=\"7\" src=\"http://127.0.0.1:9284/06e0721f-73ac-465c-bb46-f8c911e6c215\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_dist_fig = lh_evolution_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"11\"><script data-jscall-id=\"12\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('f12f9961-78f2-4d73-85ee-1b95ea23b071');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"f12f9961-78f2-4d73-85ee-1b95ea23b071\" data-jscall-id=\"10\" src=\"http://127.0.0.1:9284/f12f9961-78f2-4d73-85ee-1b95ea23b071\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can browse through the examples below. Each example has code and outputs, as well as links to download a script to run locally or to view as a Jupyter notebook on NBViewer. Some of the examples have interactive plots, and these will not currently work unless the scripts are run locally. TODO: Add binder links to examples.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you would like to run the examples as Jupyter notebooks locally to see interactive plots inline with the code, you can clone the repository and run docs/build_nbs.jl like so:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"$ git clone https://github.com/frankier/ComputerAdaptiveTesting.jl.git\n$ cd ComputerAdaptiveTesting\n$ julia --project=. docs/build_nbs.jl","category":"page"},{"location":"examples/#Examples-2","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Item Response Functions","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#ability_convergence_mirt","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-MIRT-model","page":"How abilities converge on simulated MIRT data","title":"Running a CAT based on a synthetic correct/incorrect MIRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: DRuleItemCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"dims = 2\nusing ComputerAdaptiveTesting.DummyData: dummy_full, std_mv_normal, SimpleItemBankSpec, StdModel4PL\nusing ComputerAdaptiveTesting.MathTraits\nusing ComputerAdaptiveTesting.Responses: BooleanResponse","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"TODO: pass in dims","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel4PL(), VectorContinuousDomain(), BooleanResponse()),\n    dims;\n    num_questions=10,\n    num_testees=2\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(ComputerAdaptiveTesting.ItemBanks.SlipItemBank{ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}}([0.32731847989760343, 0.0, 0.0, 0.0, 0.1259040562574968, 0.0, 0.14456308106526802, 0.1566334952644097, 0.0, 0.21220634863446142], ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}([0.1694339910738388, 0.2527248498306195, 0.00023062547461747925, 0.0, 0.0, 0.0, 0.036641847530092364, 0.27206241628970257, 0.0, 0.03617360108680866], ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-0.2323286953293871, -0.6537766589914218, 0.19787806040517794, 0.35203407274874166, 0.851694647181856, 1.309466196519976, -1.0107465737117858, -0.7094949152943335, 1.314339628372926, -0.6671599954048867], [1.3011256053421558 0.9846138042882696 0.9184808976486001 1.0323488606305218 1.0966757116087773 0.9817628648242637 0.8806355665434706 0.668540668558645 0.9463070629575676 1.15482019147558; 0.8700245703730172 1.2935901623633546 0.8725641053106077 1.19428411248183 1.2594565415816157 1.1063728050724473 1.0903033292012374 0.9704267403789976 0.9689100878520096 1.1402858917059877], nothing))), [\"Voluptas sunt qui quia quia error.\", \"In occaecati.\", \"Ea aut repellendus ut voluptas vel veniam iure.\", \"Magni non.\", \"Voluptatem ipsam impedit expedita quis qui praesentium et accusantium dolorem.\", \"Nihil et vitae consequatur aut natus cumque quae.\", \"Doloremque possimus voluptates commodi.\", \"Cum iste.\", \"Est accusamus consequuntur impedit dolores est molestiae repellat beatae eaque architecto quo.\", \"Quia assumenda molestias numquam aut natus molestiae officiis iste.\"], [0.39518942025857573 0.7013312036935758; 0.6608650681672773 1.2592999236108984], Bool[0 0; 1 1; 1 1; 1 1; 0 0; 0 0; 1 1; 1 1; 0 0; 1 1])","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"max_questions = 9\nintegrator = CubaIntegrator([-6.0, -6.0], [6.0, 6.0], CubaVegas(); rtol=1e-2)\nability_estimator = MeanAbilityEstimator(PriorAbilityEstimator(std_mv_normal(dims)), integrator)\nrules = CatRules(\n    ability_estimator,\n    DRuleItemCriterion(ability_estimator),\n    FixedItemsTerminationCondition(max_questions)\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"CatRules\n  next_item: ComputerAdaptiveTesting.NextItemRules.ItemStrategyNextItemRule{ComputerAdaptiveTesting.NextItemRules.ExhaustiveSearch1Ply, ComputerAdaptiveTesting.NextItemRules.DRuleItemCriterion{ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}}}\n  termination_condition: ComputerAdaptiveTesting.TerminationConditions.FixedItemsTerminationCondition\n  ability_estimator: ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}\n  ability_tracker: ComputerAdaptiveTesting.Aggregators.NullAbilityTracker ComputerAdaptiveTesting.Aggregators.NullAbilityTracker()\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"XXX: We shouldn't need to specify xs here since the distributions are not used – rework","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"points = 3\nxs = repeat(range(-2.5, 2.5, length=points)', dims, 1)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator, abilities)\nfor testee_idx in axes(responses, 2)\n    @debug \"Running for testee\" testee_idx\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[:, testee_idx]\n    abs_err = sum(abs.(θ .- true_θ))\n    @info \"convergence\" true_θ θ abs_err\nend","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     0.39518942025857573\n│     0.6608650681672773\n│   θ =\n│    2-element Vector{Float64}:\n│     0.46423758761991235\n│     0.5879766869477402\n└   abs_err = 0.14193654858087373\n┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     0.7013312036935758\n│     1.2592999236108984\n│   θ =\n│    2-element Vector{Float64}:\n│     0.46423758761991235\n│     0.5879766869477402\n└   abs_err = 0.9084168527368217\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make a plot showing how the estimated value converges during the CAT.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_lines_fig = ability_convergence_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"<div data-jscall-id=\"17\"><script data-jscall-id=\"18\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('8901e5ad-d2a9-4668-ad95-e61b7d6fe278');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"8901e5ad-d2a9-4668-ad95-e61b7d6fe278\" data-jscall-id=\"16\" src=\"http://127.0.0.1:9284/8901e5ad-d2a9-4668-ad95-e61b7d6fe278\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"","page":"Getting started","title":"Getting started","text":"This is the documentation for ComputerAdaptiveTesting. For information about the purpose of the package and its installation, please see the README.md.","category":"page"},{"location":"","page":"Getting started","title":"Getting started","text":"The documentation is currently mainly limited to Examples and an API reference. The currently recommended way to get started is by hacking an existing example.","category":"page"},{"location":"examples/examples/vocab_iq/#vocab_iq","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"section"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"(Image: Source code) (Image: notebook) (Image: notebook)","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"First a 1-dimensional IRT model is fitted based on open response data to the vocabulary IQ test using the IRTSupport package which internally, this uses the mirt R package. Next, the model is used to administer the test interactively.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"using Base.Filesystem\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.DummyData: std_normal\nusing ComputerAdaptiveTesting.ExtraDistributions\nusing ComputerAdaptiveTesting.Sim\nusing ComputerAdaptiveTesting.NextItemRules\nusing ComputerAdaptiveTesting.TerminationConditions\nusing ComputerAdaptiveTesting.Aggregators\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Optimizers\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing IRTSupport.Datasets.VocabIQ\n\nfunction run_vocab_iq_cat()\n    item_bank = get_item_bank_cached()\n    integrator = FixedGKIntegrator(-6, 6, 61)\n    ability_integrator = AbilityIntegrator(integrator)\n    dist_ability_est = PriorAbilityEstimator(std_normal)\n    optimizer = AbilityOptimizer(OneDimOptimOptimizer(-6.0, 6.0, NelderMead()))\n    ability_estimator = ModeAbilityEstimator(dist_ability_est, optimizer)\n    @info \"run_cat\" ability_estimator\n    rules = CatRules(\n        ability_estimator,\n        AbilityVarianceStateCriterion(dist_ability_est, ability_integrator),\n        FixedItemsTerminationCondition(45)\n    )\n    function get_response(response_idx, response_name)\n        params = item_params(item_bank, response_idx)\n        println(\"Parameters for next question: $params\")\n        VocabIQ.prompt_response(response_idx)\n    end\n    function new_response_callback(tracked_responses, terminating)\n        if tracked_responses.responses.values[end] > 0\n            println(\"Correct\")\n        else\n            println(\"Wrong\")\n        end\n        ability = ability_estimator(tracked_responses)\n        var = variance_given_mean(ability_integrator, dist_ability_est, tracked_responses, ability)\n        println(\"Got ability estimate: $ability ± $var\")\n        println(\"\")\n    end\n    loop_config = CatLoopConfig(\n        rules=rules,\n        get_response=get_response,\n        new_response_callback=new_response_callback\n    )\n    run_cat(loop_config, item_bank)\nend\n\nrun_vocab_iq_cat()","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"}]
}
