var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/#API-reference","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [ComputerAdaptiveTesting, ComputerAdaptiveTesting.Aggregators, ComputerAdaptiveTesting.ItemBanks, ComputerAdaptiveTesting.Postprocess, ComputerAdaptiveTesting.ConfigBase, ComputerAdaptiveTesting.Responses, ComputerAdaptiveTesting.Sim, ComputerAdaptiveTesting.TerminationConditions, ComputerAdaptiveTesting.NextItemRules, ComputerAdaptiveTesting.Integrators, ComputerAdaptiveTesting.IntegralCoeffs, ComputerAdaptiveTesting.CatConfig]","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = ComputerAdaptiveTesting","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [CATPlots]","category":"page"},{"location":"examples/examples/irfs/#Item-Response-Functions","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"section"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Item Response Functions","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"using Makie\nimport Pkg\nusing Distributions: Normal, cdf\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"xs = -8:0.05:8\nlines(xs, cdf.(Normal(), xs))\nlines!(xs, cdf.(NormalScaledLogistic(), xs))\ncurrent_figure()","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"<div data-jscall-id=\"23\"><script data-jscall-id=\"24\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('0b285aca-2292-4511-957f-e1aa02a27f97');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"0b285aca-2292-4511-957f-e1aa02a27f97\" data-jscall-id=\"22\" src=\"http://127.0.0.1:9284/0b285aca-2292-4511-957f-e1aa02a27f97\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"","category":"page"},{"location":"examples/examples/irfs/","page":"Item Response Functions","title":"Item Response Functions","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/examples/perf_plots/#Perf-plots","page":"Perf plots","title":"Perf plots","text":"","category":"section"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"Plots for performance of different integrators for ability estimators","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"using Makie\nimport Pkg\nusing CSV\nusing DataFrames\nusing CategoricalArrays: levels\nusing IterTools: chain\nusing ComputerAdaptiveTesting\nusing CATPlots\nusing CATPlots: LabelledToggleGrid, MenuGrid\n\nDOCS_DATA = pkgdir(ComputerAdaptiveTesting) * \"/docs/data/\"\n\n@automakie()\n\ndf = CSV.read(\n\t(DOCS_DATA * \"integrator_benchmark_results.csv\"),\n\tDataFrame;\n\ttypes=Dict(\n\t\t\"value\" => Float64,\n\t\t\"err\" => Float64,\n\t\t\"bytes\" => Int64,\n\t\t\"response\" => Int32,\n\t\t\"item_bank\" => Int32,\n\t\t\"dim\" => Int32,\n\t\t\"trial\" => Int32,\n\t\t\"time\" => Float64,\n\t\t\"gctime\" => Float64,\n\t\t\"rtol\" => Float64,\n\t)\n)\n\nfunction plot(df)\n\tfig = Figure()\n\tax = Axis(fig[1, 1])\n\n\tgroupables = [\"item_bank\", \"response\", \"trial\", \"dim\", \"integrator\"]\n\tregressables = [\"integrator\", \"dim\", \"rtol\", \"value\", \"err\", \"bytes\", \"gctime\"]\n\n\tMenu(fig, options = [\"none\", groupables...], default = \"none\")\n\ttoggles = []\n\tsliders = []\n\tslider_idxs = []\n\tmenus = []\n\tmenu_idxs = []\n\tfor (idx, groupable) in enumerate(groupables)\n\t\tpush!(toggles, (\n\t\t\tlabel = groupable,\n\t\t))\n\t\topts = sort(levels(df[!, groupable]))\n\t\tif eltype(opts) <: AbstractString\n\t\t\tpush!(slider_idxs, idx)\n\t\t\tpush!(menus, (\n\t\t\t\tlabel = groupable,\n\t\t\t\toptions = opts\n\t\t\t))\n\t\telse\n\t\t\tpush!(menu_idxs, idx)\n\t\t\tpush!(sliders, (\n\t\t\t\tlabel = groupable,\n\t\t\t\trange = opts\n\t\t\t))\n\t\tend\n\tend\n\ttgrid = LabelledToggleGrid(\n\t\tfig,\n\t\ttoggles...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tlsgrid = SliderGrid(\n\t\tfig,\n\t\tsliders...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\tmgrid = MenuGrid(\n\t\tfig,\n\t\tmenus...,\n\t\twidth = 350,\n\t\ttellheight = false\n\t)\n\n\tworking_df = Observable(nothing)\n\tfunction update_working_df(_)\n\t\tdf_prime = df\n\t\tslider_menu_vals = Vector{Any}(undef, length(sliders) + length(menus))\n\t\tslider_menu_vals[slider_idxs] = [slider.value for slider in lsgrid.sliders]\n\t\tslider_menu_vals[menu_idxs] = [menu.selection for menu in mgrid.menus]\n\t\tfor (groupable, toggle, value) in zip(groupables, tgrid.toggles, slider_menu_vals)\n\t\t\tif !toggle.value\n\t\t\t\tcontinue\n\t\t\tend\n\t\t\tdf_prime = filter(working_df, groupable => value)\n\t\tend\n\t\tworking_df[] = df_prime\n\tend\n\n\tfor observable in chain(\n\t\t(t.active for t in tgrid.toggles),\n\t\t(s.value for s in lsgrid.sliders),\n\t\t(m.selection for m in mgrid.menus)\n\t)\n\t\ton(update_working_df, observable)\n\tend\n\n\tx_var_menu = Menu(fig, options = regressables)\n\ty_var_menu = Menu(fig, options = regressables)\n\tcoded_menu = Menu(fig, options = regressables)\n\n\txs = @lift($working_df !== nothing && $(x_var_menu.selection) !== nothing ? $working_df[$(x_var_menu.selection)] : nothing)\n\tys = @lift($working_df !== nothing && $(y_var_menu.selection) !== nothing ? $working_df[$(y_var_menu.selection)] : nothing)\n\n\tscatter = @lift(\n\t\t$xs !== nothing && $ys !== nothing && $(coded_menu.selection) !== nothing ?\n\t\t\tlines!(\n\t\t\t\tax,\n\t\t\t\t$xs,\n\t\t\t\t$ys;\n\t\t\t\tcolor=$(coded_menu.selection)\n\t\t\t) : nothing\n\t)\n\n\tfig\nend\n\nplot(df)","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"<div data-jscall-id=\"29\"><script data-jscall-id=\"30\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('c821fb93-15e1-4bc9-88c2-75df0f9532c1');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"c821fb93-15e1-4bc9-88c2-75df0f9532c1\" data-jscall-id=\"28\" src=\"http://127.0.0.1:9284/c821fb93-15e1-4bc9-88c2-75df0f9532c1\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"","category":"page"},{"location":"examples/examples/perf_plots/","page":"Perf plots","title":"Perf plots","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcome. Please discuss any larger changes in the issues before making a pull request to avoid wasted work.","category":"page"},{"location":"contributing/#Running-tests","page":"Contributing","title":"Running tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can run tests locally like so:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"julia --project=test test/runtests.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Unfortunately, Pkg.test() does not work properly at the moment. See this issue.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#ability_convergence_3pl","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/examples/ability_convergence_3pl/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-3PL-IRT-model","page":"How abilities converge on simulated 3PL data","title":"Running a CAT based on a synthetic correct/incorrect 3PL IRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: AbilityVarianceStateCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Responses: BooleanResponse\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"using ComputerAdaptiveTesting.DummyData: dummy_full, std_normal, SimpleItemBankSpec, StdModel3PL\nusing ComputerAdaptiveTesting.MathTraits\n(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel3PL(), OneDimContinuousDomain(), BooleanResponse());\n    num_questions=100,\n    num_testees=3\n)","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"(ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}}([0.0, 0.013941971039431978, 0.024345799208858102, 0.0, 0.0, 0.05268189858417768, 0.03176837404888478, 0.09960724158056851, 0.2479549611542393, 0.02647970819629615, 0.0, 0.0610236971151945, 0.0, 0.1808424373507138, 0.11825610206505702, 0.004502380624851779, 0.0, 0.03870658089774833, 0.0, 0.0, 0.12020730597491976, 0.1778401949678797, 0.1062774660207275, 0.22222393677766994, 0.1493767546832274, 0.0, 0.08265216869290752, 0.0, 0.04194953600004164, 0.23625981254478048, 0.0, 0.0, 0.0, 0.1381813596414304, 0.0, 0.023061937349247844, 0.08955995622823423, 0.0, 0.0, 0.0, 0.2322880978905756, 0.09384976407570861, 0.0, 0.0, 0.012560741448855545, 0.2630298520428112, 0.0, 0.0, 0.1066436162873836, 0.20507552374534802, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11993097266625086, 0.18182992795806474, 0.0, 0.2718680153789403, 0.34994768056097747, 0.0, 0.09268849306369961, 0.06078331372051347, 0.14977839295758968, 0.0, 0.029199719273499753, 0.0, 0.010743409073276616, 0.0, 0.0, 0.0, 0.10492779160389079, 0.0, 0.0, 0.11943958877399603, 0.10323198917086329, 0.25554740309667173, 0.1530495595163851, 0.0, 0.0, 0.10724038787341586, 0.3595372125851589, 0.0, 0.17908125026089775, 0.17589610118005722, 0.0, 0.1861129917338852, 0.0, 0.0, 0.0, 0.1079702867796884, 0.0, 0.12884796751773225, 0.0, 0.0, 0.09153030347867555, 0.0, 0.07710303205514865, 0.48444848608820923, 0.0632561383140689], ComputerAdaptiveTesting.ItemBanks.TransferItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [0.19315778227845315, 0.8367277712106227, -0.9662418347341324, -1.7726282675564977, -0.49657126254425077, 0.32099193487443894, 0.9325289373280357, 1.6372996366273838, 0.24414941740251228, 0.8740758678861622, -0.4254525851971127, 0.3791951933876922, 1.9795470277154907, -1.398921988716364, 0.7175035742970999, 0.05483292573330438, -1.267936111343036, -1.8529672394814858, -0.05103526301689965, 1.0130540014175986, -0.98573050001973, 0.952941056741316, 0.18388676635707937, -2.063282612120112, 0.32446341124903916, 0.47294338631731764, 0.005451909134135596, -0.7691302487141184, 1.200669109392829, -0.7453445509045936, 1.586262193391052, -0.22145314623777845, 0.7899417508786052, 0.7510995600318233, -2.247687939855408, 0.2522099459592733, 0.7108668166996778, -0.913603407104423, -1.428468880609319, -0.15190549754795693, -1.9312446869585975, -0.19706998199820455, 0.3825796506252559, -1.6140712061576772, -0.26507830337951255, -0.8025704102952015, -1.3967090922452587, 0.4805833011768103, -1.6227429839462773, 0.4731026632583745, -0.6682167116667377, -0.8917045731933771, 0.11042863093523825, -0.5209535926053088, -1.3000166195449678, -0.9268232310314377, 0.1773147821330044, -0.061915136631992586, -0.3103940882346356, -0.744563810383239, 0.10708777950525214, 0.14852392914939436, -1.6285254778663236, -1.6368651046389173, -0.17566200142187896, -0.15502931437010228, 0.06330890525921937, -0.551472599581524, 0.5471519318323169, -0.20666502109026258, 0.23635869331782236, -0.40006984758800945, -1.1899427522690722, -1.2237087971558305, 0.2014268907650959, -0.171136229744193, 1.1658399056142537, 0.2142455428829022, 1.0413141376939443, -0.22223535191078125, -1.768991556501048, 1.2139204012922855, -0.15930193724035444, -0.007542178777441617, -0.17906192556520545, -0.1261908745459633, -0.7406782015521524, -0.4258751230405286, 0.34046911524413714, -0.37311794404907644, 0.11875590608441287, -0.015467876754101691, -0.28719243281476453, -0.4363149118319879, -2.6903286725384303, -0.09467613767401398, 0.8555483080765376, -1.5340188663009529, -0.6778692327767334, 0.4721097277610369], [1.1779709682569046, 1.0574749513268586, 1.1209082643472863, 0.9373891493659177, 1.0632787493611264, 0.8188162149123241, 1.0972019137273412, 1.1333781158100267, 0.9671742229941491, 0.936942083068808, 0.36911074402218613, 0.9220485056695196, 1.0545216019066503, 1.2415887965663182, 1.189248521095914, 0.8162967536569325, 1.158862748898564, 1.276623548631067, 0.511915650447132, 0.7951910233940345, 1.2255561286779413, 0.926466404889804, 0.8021106592975253, 1.0350020489090863, 0.8842173620947841, 0.9047930742601478, 1.0164733914567539, 0.9836965515301707, 1.3616266221455329, 1.0378104064991949, 0.943741173386692, 1.1563530636299522, 1.0959491672967336, 1.1568627698841265, 0.790746575804198, 1.0484206802281129, 0.9184043016980136, 1.0943510142848099, 0.9572001163728046, 0.8162004667173742, 1.1487882092928754, 0.9453453968388786, 1.3586582668302913, 1.2407384426369474, 1.0424464977093113, 0.9768594636394918, 0.8881776414342452, 0.766691542467339, 0.8844345626338027, 0.7066573771475526, 0.850566587551535, 1.1824249048806608, 1.1153642671597193, 1.173636494724543, 1.1868888159047537, 1.230686385800823, 0.989117595004611, 1.108157697126679, 1.0277166494699117, 1.1087157117002684, 0.9432979945362621, 0.9750228125492957, 0.9940217542904818, 1.0715310775285327, 1.1330848668562643, 1.108521428774635, 1.109356444149739, 0.6323374651761444, 1.0294632665632264, 1.3719669812117874, 0.8605482456175184, 1.110560218384025, 0.951518400779091, 1.2007564540617404, 0.9692488526403361, 0.6257606886001179, 0.7969129962764805, 1.071970467466423, 1.1618212269723154, 1.0425045532231851, 0.6014482559804321, 0.816882003869462, 0.8093355891669137, 1.0226283626659278, 0.7678490294967126, 1.4323515470234511, 0.8717494995990942, 0.8143616952447569, 1.3124156809971972, 1.1172599478083998, 0.9417872742914802, 0.7634377200935674, 1.0812857823831006, 1.0409138324165053, 1.1074541429672797, 0.5925835783036049, 0.9266097496055774, 0.6832462648964661, 1.3184977034685157, 1.221358967906478], nothing)), [\"Vel ab culpa dolorum labore et libero et.\", \"Possimus.\", \"Magni ut neque.\", \"Provident est saepe eius non deserunt aut molestiae non reprehenderit sit consequatur.\", \"Rem harum magnam officiis error dolorem.\", \"Numquam dolore quidem temporibus magnam.\", \"Voluptate.\", \"Veniam consequuntur veritatis nam.\", \"Et saepe inventore iste.\", \"Et odit explicabo laborum eos maiores quisquam.\", \"Maiores aut dignissimos dolore eveniet ducimus et.\", \"Omnis id eius voluptatem repudiandae illum molestiae reiciendis eos dolor quo excepturi.\", \"Et quidem vel veritatis ut.\", \"Veniam asperiores laudantium.\", \"Quos voluptas esse minus perferendis quas facere.\", \"Deserunt sit quis.\", \"Sit.\", \"Architecto aut reprehenderit ipsum eaque magnam laborum fugiat explicabo odit nostrum fugit.\", \"Ut quaerat laudantium voluptatem eos consequatur facere.\", \"Sequi tenetur.\", \"Ut.\", \"Mollitia consectetur dolorem sit voluptate vero occaecati ex libero quod exercitationem.\", \"Ab doloremque recusandae sequi saepe nam repellendus veniam alias et atque.\", \"Consequatur velit necessitatibus nesciunt ipsum voluptatem totam aut animi rem repellendus doloribus.\", \"Odit velit a.\", \"Qui qui iste quo sit.\", \"Dolorum sed voluptatem vel cumque repudiandae magni nemo laudantium.\", \"Dolores et eos maxime quaerat autem et et autem.\", \"Sint ullam.\", \"Necessitatibus fuga adipisci excepturi sunt numquam non.\", \"Aliquam dolores nobis quos harum.\", \"Voluptatibus.\", \"Ea et recusandae qui quod natus dignissimos dolore nemo et.\", \"Ut blanditiis a consequatur commodi ut quas aut optio qui.\", \"Exercitationem dicta doloribus voluptas numquam quasi architecto velit mollitia autem quis.\", \"Placeat est.\", \"Vel sit rerum tempore quae molestias itaque eum et quo est.\", \"Omnis quae iure odit laborum sed.\", \"Autem quis velit quod praesentium.\", \"Rerum et at sint quam rerum numquam et eos tempora consequatur.\", \"Aliquam molestiae eius aliquid.\", \"Aut quia quo quibusdam qui.\", \"Qui hic ipsum qui dolorem nihil.\", \"Numquam ut debitis officiis itaque.\", \"Illo voluptatum ratione.\", \"Consectetur eum assumenda dolore.\", \"Autem quos itaque quidem nostrum repellat reiciendis id nesciunt impedit earum eius.\", \"Veniam nobis corrupti ut et maxime voluptas nihil deleniti.\", \"Inventore consequatur quisquam officiis.\", \"Qui culpa sunt consequuntur et id voluptas qui harum autem officiis.\", \"Sed numquam accusantium dolorum sint consequatur voluptas quibusdam aliquid aut.\", \"Sequi illum.\", \"Veniam in fuga alias voluptates at ut dolore.\", \"Sapiente debitis et explicabo qui magnam libero voluptate optio vitae.\", \"Vel numquam sequi nam officiis illum suscipit aut ullam tenetur quia.\", \"Ea.\", \"Nesciunt qui exercitationem eligendi sapiente impedit et distinctio sint incidunt rerum dignissimos.\", \"Nihil rerum ipsum nam animi et.\", \"Aspernatur eos sed asperiores quas illo ducimus ut vel sapiente blanditiis delectus.\", \"Optio.\", \"Laudantium et qui tenetur at.\", \"Vero iusto sed temporibus ut sit tempora corporis minima explicabo assumenda aut.\", \"Ipsa placeat provident pariatur.\", \"Similique eligendi et amet.\", \"Quod nulla.\", \"Et consequatur adipisci.\", \"Labore consequatur impedit vel recusandae similique facere neque quia velit.\", \"Ut aut natus id.\", \"Amet nam voluptatum architecto omnis sed nihil.\", \"Autem quisquam dolorum soluta ut sed et.\", \"Asperiores nihil delectus soluta et veritatis alias.\", \"Nobis autem iste aut qui minus officia optio facilis.\", \"Optio iusto vitae omnis non et ut et.\", \"Incidunt dolore neque in earum doloribus maiores in aliquam sint.\", \"Earum deserunt aut et ad saepe possimus sapiente voluptatum dolorem ipsam.\", \"Perspiciatis soluta reiciendis eum quia esse corrupti qui et dolor quia.\", \"Qui id quasi repellat dolorem sint.\", \"Voluptatem eius est consequatur quasi eos.\", \"Quia mollitia omnis perspiciatis praesentium consequatur eveniet ut sint distinctio est est.\", \"Dignissimos et quo quod perferendis numquam dolores harum libero ipsam in dicta.\", \"Et.\", \"Quia culpa omnis illum aliquid.\", \"Quo rerum deserunt.\", \"Autem voluptatem dicta beatae officia delectus voluptatum rerum iure assumenda dolores.\", \"Autem explicabo corrupti voluptatem est est necessitatibus tempora.\", \"Corporis ut atque cumque laudantium rerum.\", \"Incidunt magni ut consequatur suscipit quia architecto beatae.\", \"Aliquid laborum dolores.\", \"Est asperiores at molestiae.\", \"Quae magnam dolorem adipisci.\", \"Illum eos autem molestiae non voluptate quod dolor rem ullam quaerat.\", \"Qui optio ut sit ipsum molestias sapiente.\", \"Natus ipsum vitae libero dicta ut non.\", \"Aliquid et cupiditate labore inventore consequatur.\", \"Facere sit id quaerat est sunt dolores.\", \"Perspiciatis fugiat voluptas aut.\", \"Molestias.\", \"Explicabo sint.\", \"Architecto minus necessitatibus ad et enim cum culpa ea debitis voluptatem.\", \"Labore architecto.\"], [-1.5353939798571317, -0.11902005353988135, 1.44348828239663], Bool[0 0 0; 0 0 1; 0 0 1; 1 1 1; 0 0 1; 0 0 1; 0 0 1; 0 0 0; 0 0 1; 0 1 0; 0 0 0; 0 0 1; 0 0 0; 0 0 1; 0 0 1; 0 1 1; 1 1 1; 0 1 1; 0 0 1; 0 0 1; 1 1 1; 0 1 1; 1 0 1; 1 1 1; 0 0 0; 0 0 1; 0 0 1; 1 1 1; 0 0 1; 0 1 1; 0 0 0; 0 1 1; 0 1 1; 0 1 1; 1 1 1; 0 0 1; 0 0 1; 0 1 1; 1 1 1; 0 0 1; 1 1 1; 0 0 1; 0 0 1; 1 1 1; 0 1 1; 1 1 1; 0 1 1; 0 0 1; 1 1 1; 0 1 1; 0 0 1; 0 1 1; 0 1 1; 0 1 1; 0 1 1; 0 1 1; 0 1 1; 0 1 1; 0 1 1; 1 1 1; 1 1 1; 1 0 1; 1 1 1; 1 1 1; 0 0 1; 0 1 1; 0 0 1; 0 0 1; 0 0 1; 0 0 1; 0 1 1; 0 1 1; 0 0 1; 1 1 1; 0 1 1; 0 1 1; 0 0 1; 0 0 0; 0 0 1; 0 0 1; 1 1 1; 1 0 1; 1 1 1; 0 1 1; 1 0 1; 1 0 1; 0 1 1; 0 0 1; 0 1 1; 0 0 1; 0 0 1; 0 1 1; 0 0 1; 0 0 1; 1 1 1; 0 1 0; 0 0 1; 1 1 1; 1 1 1; 0 1 1])","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"max_questions = 99\nintegrator = FixedGKIntegrator(-6, 6, 80)\ndist_ability_est = PriorAbilityEstimator(std_normal)\nability_estimator = MeanAbilityEstimator(dist_ability_est, integrator)\nrules = CatRules(\n    ability_estimator,\n    AbilityVarianceStateCriterion(dist_ability_est, integrator),\n    FixedItemsTerminationCondition(max_questions)\n)\n\npoints = 500\nxs = range(-2.5, 2.5, length=points)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator)\nfor testee_idx in axes(responses, 2)\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[testee_idx]\n    abs_err = abs(θ - true_θ)\nend","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make a plot showing how the estimated value evolves during the CAT. We also plot the 'true' values used to generate the responses.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_lines_fig = ability_evolution_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"8\"><script data-jscall-id=\"9\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('f2877645-d2db-4a43-a67c-f673f2ad1dc1');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"f2877645-d2db-4a43-a67c-f673f2ad1dc1\" data-jscall-id=\"7\" src=\"http://127.0.0.1:9284/f2877645-d2db-4a43-a67c-f673f2ad1dc1\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"Make an interactive plot, showing how the distribution of the ability likelihood evolves.","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"conv_dist_fig = lh_evolution_interactive(recorder; abilities=abilities)\nconv_dist_fig","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"<div data-jscall-id=\"11\"><script data-jscall-id=\"12\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('ee388b3d-b2ee-4677-bdb5-e40ed1f5a793');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"ee388b3d-b2ee-4677-bdb5-e40ed1f5a793\" data-jscall-id=\"10\" src=\"http://127.0.0.1:9284/ee388b3d-b2ee-4677-bdb5-e40ed1f5a793\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_3pl/","page":"How abilities converge on simulated 3PL data","title":"How abilities converge on simulated 3PL data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can browse through the examples below. Each example has code and outputs, as well as links to download a script to run locally or to view as a Jupyter notebook on NBViewer. Some of the examples have interactive plots, and these will not currently work unless the scripts are run locally. TODO: Add binder links to examples.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"If you would like to run the examples as Jupyter notebooks locally to see interactive plots inline with the code, you can clone the repository and run docs/build_nbs.jl like so:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"$ git clone https://github.com/frankier/ComputerAdaptiveTesting.jl.git\n$ cd ComputerAdaptiveTesting\n$ julia --project=. docs/build_nbs.jl","category":"page"},{"location":"examples/#Examples-2","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card-section\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated 3PL data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect 3PL IRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Item Response Functions","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Typically, the logistic c.d.f. is used as the transfer function in IRT. However, it in an IRT context, a scaled version intended to be close to a normal c.d.f. is often used. The main advantage is that this is usually faster to compute. ComputerAdaptiveTesting provides NormalScaledLogistic, which is also used by default, for this purpose:","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perf plots","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: list-card-cover-image)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"</div>","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#ability_convergence_mirt","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"How abilities converge on simulated MIRT data","category":"page"},{"location":"examples/examples/ability_convergence_mirt/#Running-a-CAT-based-on-a-synthetic-correct/incorrect-MIRT-model","page":"How abilities converge on simulated MIRT data","title":"Running a CAT based on a synthetic correct/incorrect MIRT model","text":"","category":"section"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This example shows how to run a CAT based on a synthetic correct/incorrect MIRT model.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Import order is important. We put ComputerAdaptiveTesting last so we get the extra dependencies.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"using Makie\nimport Pkg\nimport Random\nusing Distributions: Normal, cdf\nusing AlgebraOfGraphics\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.ExtraDistributions: NormalScaledLogistic\nusing ComputerAdaptiveTesting.Sim: auto_responder\nusing ComputerAdaptiveTesting.NextItemRules: DRuleItemCriterion\nusing ComputerAdaptiveTesting.TerminationConditions: FixedItemsTerminationCondition\nusing ComputerAdaptiveTesting.Aggregators: PriorAbilityEstimator, MeanAbilityEstimator, LikelihoodAbilityEstimator\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing CATPlots\n\n@automakie()","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Now we are read to generate our synthetic data using the supplied DummyData module. We generate an item bank with 100 items and fake responses for 3 testees.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"dims = 2\nusing ComputerAdaptiveTesting.DummyData: dummy_full, std_mv_normal, SimpleItemBankSpec, StdModel4PL\nusing ComputerAdaptiveTesting.MathTraits\nusing ComputerAdaptiveTesting.Responses: BooleanResponse","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"TODO: pass in dims","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(item_bank, question_labels, abilities, responses) = dummy_full(\n    Random.default_rng(42),\n    SimpleItemBankSpec(StdModel4PL(), VectorContinuousDomain(), BooleanResponse()),\n    dims;\n    num_questions=10,\n    num_testees=2\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"(ComputerAdaptiveTesting.ItemBanks.SlipItemBank{ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}}([0.023912513863875308, 0.0, 0.15353809584826839, 0.10656445357681131, 0.052743481874599846, 0.11402563936589763, 0.20061498465718866, 0.076176971259935, 0.0, 0.237237696847274], ComputerAdaptiveTesting.ItemBanks.GuessItemBank{ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}}([0.0, 0.2212884805705068, 0.3503584223601633, 0.11739362038139112, 0.0, 0.026058645443881506, 0.2440750770414704, 0.0, 0.0, 0.06840794392911723], ComputerAdaptiveTesting.ItemBanks.CdfMirtItemBank{Distributions.Logistic{Float64}}(Distributions.Logistic{Float64}(μ=0.0, θ=0.5875440658049353), [-2.0096963351237416, -0.3753752233240537, 1.224165630245063, 2.471084341786806, -2.113798745128066, 0.9204218489555178, 1.8882227598789103, -1.2216289958769184, -0.6409152516083017, -0.1226899623606879], [0.9433260932483163 0.822085672873083 0.895403647014317 1.0220328044320488 1.011190405330945 0.9715709801120117 1.0564305682254636 1.2959591805110022 1.182582941791194 1.1312331730513223; 0.8496763350574478 0.9928336275648609 1.3097699656277881 1.1768094223886056 1.2490823307764847 0.9667878159216293 1.3414619163381822 1.1118212544646915 0.8201766784357124 0.9999354831082334], nothing))), [\"Pariatur voluptatem voluptas voluptatem a consequatur.\", \"Quia quia corporis ut architecto laudantium id maiores soluta.\", \"Velit architecto nam cumque alias perspiciatis.\", \"Et in sed optio quos atque et iste temporibus aut.\", \"Amet voluptatum eos modi dolore dignissimos dolor.\", \"Ut quos asperiores amet ut rerum.\", \"Ex sint adipisci quo amet expedita minus voluptate ullam accusantium iste consequuntur.\", \"Quod.\", \"Dolores veritatis laboriosam.\", \"Quidem et eum perferendis maxime dolores expedita ullam odit.\"], [-0.1549227792890839 1.2541503570973496; -0.529546269422748 1.9125093881358741], Bool[1 1; 1 1; 1 1; 0 0; 1 1; 0 1; 0 1; 1 1; 1 1; 1 1])","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Simulate a CAT for each testee and record it using CatRecorder. CatRecorder collects information which can be used to draw different types of plots.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"max_questions = 9\nintegrator = CubaIntegrator([-6.0, -6.0], [6.0, 6.0], CubaVegas(); rtol=1e-2)\nability_estimator = MeanAbilityEstimator(PriorAbilityEstimator(std_mv_normal(dims)), integrator)\nrules = CatRules(\n    ability_estimator,\n    DRuleItemCriterion(ability_estimator),\n    FixedItemsTerminationCondition(max_questions)\n)","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"CatRules\n  next_item: ComputerAdaptiveTesting.NextItemRules.ItemStrategyNextItemRule{ComputerAdaptiveTesting.NextItemRules.ExhaustiveSearch1Ply, ComputerAdaptiveTesting.NextItemRules.DRuleItemCriterion{ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}}}\n  termination_condition: ComputerAdaptiveTesting.TerminationConditions.FixedItemsTerminationCondition\n  ability_estimator: ComputerAdaptiveTesting.Aggregators.MeanAbilityEstimator{ComputerAdaptiveTesting.Aggregators.PriorAbilityEstimator{Distributions.ZeroMeanIsoNormal{Tuple{Base.OneTo{Int64}}}}, ComputerAdaptiveTesting.Aggregators.FunctionIntegrator{ComputerAdaptiveTesting.Integrators.CubaIntegrator{ComputerAdaptiveTesting.Integrators.CubaVegas, Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:rtol,), Tuple{Float64}}}}}}\n  ability_tracker: ComputerAdaptiveTesting.Aggregators.NullAbilityTracker ComputerAdaptiveTesting.Aggregators.NullAbilityTracker()\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"XXX: We shouldn't need to specify xs here since the distributions are not used – rework","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"points = 3\nxs = repeat(range(-2.5, 2.5, length=points)', dims, 1)\nraw_estimator = LikelihoodAbilityEstimator()\nrecorder = CatRecorder(xs, responses, integrator, raw_estimator, ability_estimator, abilities)\nfor testee_idx in axes(responses, 2)\n    @debug \"Running for testee\" testee_idx\n    tracked_responses, θ = run_cat(\n        CatLoopConfig(\n            rules=rules,\n            get_response=auto_responder(@view responses[:, testee_idx]),\n            new_response_callback=(tracked_responses, terminating) -> recorder(tracked_responses, testee_idx, terminating),\n        ),\n        item_bank\n    )\n    true_θ = abilities[:, testee_idx]\n    abs_err = sum(abs.(θ .- true_θ))\n    @info \"convergence\" true_θ θ abs_err\nend","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     -0.1549227792890839\n│     -0.529546269422748\n│   θ =\n│    2-element Vector{Float64}:\n│     0.4205493576555336\n│     0.4379398957486302\n└   abs_err = 1.5429583021159958\n┌ Info: convergence\n│   true_θ =\n│    2-element Vector{Float64}:\n│     1.2541503570973496\n│     1.9125093881358741\n│   θ =\n│    2-element Vector{Float64}:\n│     1.0986205249633771\n│     1.2655456816306678\n└   abs_err = 0.8024935386391787\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"Make a plot showing how the estimated value converges during the CAT.","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"conv_lines_fig = ability_convergence_lines(recorder; abilities=abilities)\nconv_lines_fig","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"<div data-jscall-id=\"17\"><script data-jscall-id=\"18\" type=\"text/javascript\">\n    function register_resize_handler(remote_origin) {\n        function resize_callback(event) {\n            if (event.origin !== remote_origin) {\n                return;\n            }\n            const uuid = event.data[0];\n            const width = event.data[1];\n            const height = event.data[2];\n            const iframe = document.getElementById('9afa3bd1-6b10-43e3-ad57-fa2266b9e015');\n            if (iframe) {\n                iframe.style.width = width + \"px\";\n                iframe.style.height = height + \"px\";\n            }\n        }\n        if (window.addEventListener) {\n            window.addEventListener(\"message\", resize_callback, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onmessage\", resize_callback);\n        }\n    }\n    register_resize_handler('http://127.0.0.1:9284')\n\n</script><iframe scrolling=\"no\" id=\"9afa3bd1-6b10-43e3-ad57-fa2266b9e015\" data-jscall-id=\"16\" src=\"http://127.0.0.1:9284/9afa3bd1-6b10-43e3-ad57-fa2266b9e015\" style=\"position: relative; display: block; width: 100%; height: 100%; padding: 0; overflow: hidden; border: none\"></iframe></div>\n","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"","category":"page"},{"location":"examples/examples/ability_convergence_mirt/","page":"How abilities converge on simulated MIRT data","title":"How abilities converge on simulated MIRT data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"","page":"Getting started","title":"Getting started","text":"This is the documentation for ComputerAdaptiveTesting. For information about the purpose of the package and its installation, please see the README.md.","category":"page"},{"location":"","page":"Getting started","title":"Getting started","text":"The documentation is currently mainly limited to Examples and an API reference. The currently recommended way to get started is by hacking an existing example.","category":"page"},{"location":"examples/examples/vocab_iq/#vocab_iq","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"section"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"Running a CAT based based on real response data","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This example shows how to run a CAT end-to-end on real data.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"First a 1-dimensional IRT model is fitted based on open response data to the vocabulary IQ test using the IRTSupport package which internally, this uses the mirt R package. Next, the model is used to administer the test interactively.","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"using Base.Filesystem\nusing ComputerAdaptiveTesting\nusing ComputerAdaptiveTesting.DummyData: std_normal\nusing ComputerAdaptiveTesting.ExtraDistributions\nusing ComputerAdaptiveTesting.Sim\nusing ComputerAdaptiveTesting.NextItemRules\nusing ComputerAdaptiveTesting.TerminationConditions\nusing ComputerAdaptiveTesting.Aggregators\nusing ComputerAdaptiveTesting.ItemBanks\nusing ComputerAdaptiveTesting.Integrators\nusing ComputerAdaptiveTesting.Optimizers\nimport ComputerAdaptiveTesting.IntegralCoeffs\nusing IRTSupport.Datasets.VocabIQ\n\nfunction run_vocab_iq_cat()\n    item_bank = get_item_bank_cached()\n    integrator = FixedGKIntegrator(-6, 6, 61)\n    ability_integrator = AbilityIntegrator(integrator)\n    dist_ability_est = PriorAbilityEstimator(std_normal)\n    optimizer = AbilityOptimizer(OneDimOptimOptimizer(-6.0, 6.0, NelderMead()))\n    ability_estimator = ModeAbilityEstimator(dist_ability_est, optimizer)\n    @info \"run_cat\" ability_estimator\n    rules = CatRules(\n        ability_estimator,\n        AbilityVarianceStateCriterion(dist_ability_est, ability_integrator),\n        FixedItemsTerminationCondition(45)\n    )\n    function get_response(response_idx, response_name)\n        params = item_params(item_bank, response_idx)\n        println(\"Parameters for next question: $params\")\n        VocabIQ.prompt_response(response_idx)\n    end\n    function new_response_callback(tracked_responses, terminating)\n        if tracked_responses.responses.values[end] > 0\n            println(\"Correct\")\n        else\n            println(\"Wrong\")\n        end\n        ability = ability_estimator(tracked_responses)\n        var = variance_given_mean(ability_integrator, dist_ability_est, tracked_responses, ability)\n        println(\"Got ability estimate: $ability ± $var\")\n        println(\"\")\n    end\n    loop_config = CatLoopConfig(\n        rules=rules,\n        get_response=get_response,\n        new_response_callback=new_response_callback\n    )\n    run_cat(loop_config, item_bank)\nend\n\nrun_vocab_iq_cat()","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"","category":"page"},{"location":"examples/examples/vocab_iq/","page":"Running a CAT based based on real response data","title":"Running a CAT based based on real response data","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"}]
}
