name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          project: 'test'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/julia-buildpkg@v1
      - name: Set CAT packages to develop & resolve env
        run: |
          julia --project=docs/ -e 'using Pkg;
                                    Pkg.develop("ComputerAdaptiveTesting");
                                    Pkg.develop("CATPlots");
                                    Pkg.resolve();
                                    Pkg.instantiate()'
      - name: Install GitHubActions.jl in docs env
        run: |
          julia --project=docs/ -e '
            using Pkg
            Pkg.add(Pkg.PackageSpec(name="GitHubActions", version="0.1"))'
      - name: Make docs
        run: |
          julia --project=docs/ -e '
            include("docs/make.jl")'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - name: Run doctest
        run: |
          julia --project=docs/ -e '
            using Documenter: DocMeta, doctest
            using ComputerAdaptiveTesting
            DocMeta.setdocmeta!(ComputerAdaptiveTesting, :DocTestSetup, :(using ComputerAdaptiveTesting); recursive=true)
            doctest(ComputerAdaptiveTesting)'
